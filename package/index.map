{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 432b5a4b1f0585dad750","webpack:///./components/toggle-container/fstogglecontainer.scss","webpack:///./components/toggle-options/fstoggleoption.scss","webpack:///../node_modules/css-loader/lib/css-base.js","webpack:///./components/index.ts","webpack:///./components/toggle-container/fstogglecontainer.component.ts","webpack:///./components/toggle-container/fstogglecontainer.scss?decc","webpack:///./components/toggle-container/index.ts","webpack:///./components/toggle-options/fstoggleoption.component.ts","webpack:///./components/toggle-options/fstoggleoption.scss?018b","webpack:///./components/toggle-options/index.ts","webpack:///./components/toggle/fstoggle.component.ts","webpack:///./components/toggle/index.ts","webpack:///./fstoggle.module.ts","webpack:///./index.ts","webpack:///external \"@angular/common\"","webpack:///external \"@angular/core\"","webpack:///external \"@angular/forms\"","webpack:///external \"@angular/material\"","webpack:///external \"@firestitch/common\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@firestitch/toggle\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@firestitch/toggle\"] = factory();\n\telse\n\t\troot[\"@firestitch/toggle\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 432b5a4b1f0585dad750","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/deep/ label {\\n  -webkit-transform: translate3d(0, 0px, 0) scale(0.75);\\n          transform: translate3d(0, 0px, 0) scale(0.75);\\n  -webkit-transform-origin: left;\\n          transform-origin: left;\\n  display: block;\\n  line-height: 21px;\\n  -webkit-transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;\\n  transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;\\n  color: rgba(0, 0, 0, .54);\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/mendor/work/fs-toggle/src/components/toggle-container/src/components/toggle-container/fstogglecontainer.scss\",\"/Users/mendor/work/fs-toggle/src/components/toggle-container/fstogglecontainer.scss\"],\"names\":[],\"mappings\":\"AAAO;EACL,sDAAA;UAAA,8CAAA;EACA,+BAAA;UAAA,uBAAA;EACA,eAAA;EACA,kBAAA;EACA,2DAAA;EAAA,mDAAA;EACA,0BAAA;CCCD\",\"file\":\"fstogglecontainer.scss\",\"sourcesContent\":[\"/deep/ label {\\n  transform: translate3d(0, 0px, 0) scale(0.75);\\n  transform-origin: left;\\n  display: block;\\n  line-height: 21px;\\n  transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;\\n  color: rgba(0, 0, 0, 0.54);\\n}\",\"/deep/ label {\\n  transform: translate3d(0, 0px, 0) scale(0.75);\\n  transform-origin: left;\\n  display: block;\\n  line-height: 21px;\\n  transition: cubic-bezier(0.25, 0.8, 0.25, 1) 0.25s;\\n  color: rgba(0, 0, 0, 0.54);\\n}\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?{\"sourceMap\":true}!../node_modules/postcss-loader/lib?{\"sourceMap\":true}!../node_modules/resolve-url-loader?{\"sourceMap\":true}!../node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./components/toggle-container/fstogglecontainer.scss\n// module id = ../node_modules/css-loader/index.js?{\"sourceMap\":true}!../node_modules/postcss-loader/lib/index.js?{\"sourceMap\":true}!../node_modules/resolve-url-loader/index.js?{\"sourceMap\":true}!../node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./components/toggle-container/fstogglecontainer.scss\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n\\n/* Theme for the ripple elements.*/\\n\\n/** The mixins below are shared between mat-menu and mat-select */\\n\\n/**\\n * This mixin adds the correct panel transform styles based\\n * on the direction that the menu panel opens.\\n */\\n\\n/* stylelint-disable material/no-prefixes */\\n\\n/* stylelint-enable */\\n\\n/**\\n * This mixin contains shared option styles between the select and\\n * autocomplete components.\\n */\\n\\n:host {\\n  margin-right: 5px;\\n}\\n\\n:host:last-child {\\n  margin: 0;\\n}\\n\\n:host .fs-toggle-option {\\n  border: 1px solid #2196f3;\\n  border-radius: 4px;\\n  display: inline-block;\\n  padding: 5px 8px;\\n  cursor: pointer;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: none;\\n  text-align: center;\\n  color: #fff;\\n}\\n\\n:host .fs-toggle-option .mat-icon {\\n  vertical-align: middle;\\n}\\n\\n:host .fs-toggle-option .fs-toggle-option-template {\\n  vertical-align: middle;\\n}\\n\\n:host .fs-toggle-option.selected mat-icon {\\n  color: #fff;\\n}\\n\\n:host .fs-toggle-option:not(.selected) {\\n  background-color: transparent !important;\\n  border-color: #2196f3 !important;\\n  color: #2196f3 !important;\\n}\\n\\n:host .fs-toggle-option.selected {\\n  background-color: #2196f3;\\n  border-color: #2196f3;\\n}\\n\\n\", \"\", {\"version\":3,\"sources\":[\"/Users/mendor/work/fs-toggle/src/components/toggle-options/node_modules/@angular/material/_theming.scss\",\"/Users/mendor/work/fs-toggle/src/components/toggle-options/fstoggleoption.scss\",\"/Users/mendor/work/fs-toggle/src/components/toggle-options/src/components/toggle-options/fstoggleoption.scss\"],\"names\":[],\"mappings\":\"AA8GA;;;;GC1GG;;ADupCH,mCAAA;;AA+DA,kEAAA;;AAiDA;;;GC9vCG;;ADsyCH,4CAAA;;AAwCA,sBAAA;;AAaA;;;GCl1CG;;ACpBH;EAEE,kBAAA;CDsBD;;ACpBC;EACE,UAAA;CDuBH;;AC5BD;EASI,0BAAA;EACA,mBAAA;EAEA,sBAAA;EACA,iBAAA;EACA,gBAAA;EACA,4BAAA;EACA,0BAAA;EACA,uBAAA;EACA,sBAAA;EACA,kBAAA;EACA,cAAA;EACA,mBAAA;EACA,YAAA;CDsBH;;AC5CD;EAyBM,uBAAA;CDuBL;;ACpBG;EACE,uBAAA;CDuBL;;ACpDD;EAiCM,YAAA;CDuBL;;AChDC;EA4BI,yCAAA;EACA,iCAAA;EACA,0BAAA;CDwBL;;AC9DD;EAyCM,0BAAA;EACA,sBAAA;CDyBL\",\"file\":\"fstoggleoption.scss\",\"sourcesContent\":[\"// Import all the theming functionality.\\n// We can use relative imports for imports from the cdk because we bundle everything\\n// up into a single flat scss file for material.\\n// We want overlays to always appear over user content, so set a baseline\\n// very high z-index for the overlay container, which is where we create the new\\n// stacking context for all overlays.\\n$cdk-z-index-overlay-container: 1000;\\n$cdk-z-index-overlay: 1000;\\n$cdk-z-index-overlay-backdrop: 1000;\\n\\n// Background color for all of the backdrops\\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\\n\\n// Default backdrop animation is based on the Material Design swift-ease-out.\\n$backdrop-animation-duration: 400ms !default;\\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\\n\\n\\n@mixin cdk-overlay() {\\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\\n    // Disable events from being captured on the overlay container.\\n    pointer-events: none;\\n\\n    // The container should be the size of the viewport.\\n    top: 0;\\n    left: 0;\\n    height: 100%;\\n    width: 100%;\\n  }\\n\\n  // The overlay-container is an invisible element which contains all individual overlays.\\n  .cdk-overlay-container {\\n    position: fixed;\\n    z-index: $cdk-z-index-overlay-container;\\n  }\\n\\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\\n  // This makes centering the overlay easy without running into the subpixel rendering\\n  // problems tied to using `transform` and without interfering with the other position\\n  // strategies.\\n  .cdk-global-overlay-wrapper {\\n    display: flex;\\n    position: absolute;\\n    z-index: $cdk-z-index-overlay;\\n  }\\n\\n  // A single overlay pane.\\n  .cdk-overlay-pane {\\n    position: absolute;\\n    pointer-events: auto;\\n    box-sizing: border-box;\\n    z-index: $cdk-z-index-overlay;\\n  }\\n\\n  .cdk-overlay-backdrop {\\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\\n    position: absolute;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n\\n    z-index: $cdk-z-index-overlay-backdrop;\\n    pointer-events: auto;\\n    -webkit-tap-highlight-color: transparent;\\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\\n    opacity: 0;\\n\\n    &.cdk-overlay-backdrop-showing {\\n      opacity: 0.48;\\n    }\\n  }\\n\\n  .cdk-overlay-dark-backdrop {\\n    background: $cdk-overlay-dark-backdrop-background;\\n  }\\n\\n  .cdk-overlay-transparent-backdrop {\\n    background: none;\\n  }\\n\\n  // Used when disabling global scrolling.\\n  .cdk-global-scrollblock {\\n    position: fixed;\\n\\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\\n    // that the element had before we made it `fixed`.\\n    width: 100%;\\n\\n    // Note: this will always add a scrollbar to whatever element it is on, which can\\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\\n    overflow-y: scroll;\\n  }\\n}\\n\\n@mixin cdk-a11y {\\n  .cdk-visually-hidden {\\n    border: 0;\\n    clip: rect(0 0 0 0);\\n    height: 1px;\\n    margin: -1px;\\n    overflow: hidden;\\n    padding: 0;\\n    position: absolute;\\n    width: 1px;\\n  }\\n}\\n\\n/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n@mixin cdk-high-contrast {\\n  @media screen and (-ms-high-contrast: active) {\\n    @content;\\n  }\\n}\\n\\n\\n// Core styles that can be used to apply material design treatments to any element.\\n// Media queries\\n// TODO: Find a way to respect media query ranges.\\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\\n$mat-xsmall: 'max-width: 600px';\\n$mat-small: 'max-width: 960px';\\n\\n// TODO(crisbeto): this isn't being used anywhere within Material. keeping for backwards compat.\\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\\n\\n// TODO: Revisit all z-indices before beta\\n// z-index master list\\n\\n$z-index-fab: 20 !default;\\n$z-index-drawer: 100 !default;\\n\\n// Global constants\\n$pi: 3.14159265;\\n\\n// Padding between input toggles and their labels\\n$mat-toggle-padding: 8px !default;\\n// Width and height of input toggles\\n$mat-toggle-size: 20px !default;\\n\\n// Easing Curves\\n// TODO(jelbourn): all of these need to be revisited\\n\\n// The default animation curves used by material design.\\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\\n\\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\\n\\n$swift-ease-out-duration: 400ms !default;\\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\\n\\n$swift-ease-in-duration: 300ms !default;\\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\\n\\n$swift-ease-in-out-duration: 500ms !default;\\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\\n\\n$swift-linear-duration: 80ms !default;\\n$swift-linear-timing-function: linear !default;\\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\\n\\n\\n\\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\\n// element.\\n// See: https://www.google.com/design/spec/what-is-material/elevation-shadows.html\\n// Examples:\\n//\\n//\\n// .mat-foo {\\n//   @include $mat-elevation(2);\\n//\\n//   &:active {\\n//     @include $mat-elevation(8);\\n//   }\\n// }\\n//\\n// <div id=\\\"external-card\\\" class=\\\"mat-elevation-z2\\\"><p>Some content</p></div>\\n//\\n// For an explanation of the design behind how elevation is implemented, see the design doc at\\n// https://goo.gl/Kq0k9Z.\\n\\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\\n// space completely obscured by an object relative to its light source), one for penumbra (the\\n// space partially obscured by an object), and one for ambient (the space which contains the object\\n// itself). For a further explanation of these terms and their meanings, see\\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\\n\\n$_umbra-color: rgba(black, 0.2);\\n$_penumbra-color: rgba(black, 0.14);\\n$_ambient-color: rgba(black, 0.12);\\n\\n// Maps for the different shadow sets and their values within each z-space. These values were\\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\\n// all of the values between them.\\n\\n$_umbra-elevation-map: (\\n  0: '0px 0px 0px 0px #{$_umbra-color}',\\n  1: '0px 2px 1px -1px #{$_umbra-color}',\\n  2: '0px 3px 1px -2px #{$_umbra-color}',\\n  3: '0px 3px 3px -2px #{$_umbra-color}',\\n  4: '0px 2px 4px -1px #{$_umbra-color}',\\n  5: '0px 3px 5px -1px #{$_umbra-color}',\\n  6: '0px 3px 5px -1px #{$_umbra-color}',\\n  7: '0px 4px 5px -2px #{$_umbra-color}',\\n  8: '0px 5px 5px -3px #{$_umbra-color}',\\n  9: '0px 5px 6px -3px #{$_umbra-color}',\\n  10: '0px 6px 6px -3px #{$_umbra-color}',\\n  11: '0px 6px 7px -4px #{$_umbra-color}',\\n  12: '0px 7px 8px -4px #{$_umbra-color}',\\n  13: '0px 7px 8px -4px #{$_umbra-color}',\\n  14: '0px 7px 9px -4px #{$_umbra-color}',\\n  15: '0px 8px 9px -5px #{$_umbra-color}',\\n  16: '0px 8px 10px -5px #{$_umbra-color}',\\n  17: '0px 8px 11px -5px #{$_umbra-color}',\\n  18: '0px 9px 11px -5px #{$_umbra-color}',\\n  19: '0px 9px 12px -6px #{$_umbra-color}',\\n  20: '0px 10px 13px -6px #{$_umbra-color}',\\n  21: '0px 10px 13px -6px #{$_umbra-color}',\\n  22: '0px 10px 14px -6px #{$_umbra-color}',\\n  23: '0px 11px 14px -7px #{$_umbra-color}',\\n  24: '0px 11px 15px -7px #{$_umbra-color}'\\n);\\n\\n$_penumbra-elevation-map: (\\n  0: '0px 0px 0px 0px #{$_penumbra-color}',\\n  1: '0px 1px 1px 0px #{$_penumbra-color}',\\n  2: '0px 2px 2px 0px #{$_penumbra-color}',\\n  3: '0px 3px 4px 0px #{$_penumbra-color}',\\n  4: '0px 4px 5px 0px #{$_penumbra-color}',\\n  5: '0px 5px 8px 0px #{$_penumbra-color}',\\n  6: '0px 6px 10px 0px #{$_penumbra-color}',\\n  7: '0px 7px 10px 1px #{$_penumbra-color}',\\n  8: '0px 8px 10px 1px #{$_penumbra-color}',\\n  9: '0px 9px 12px 1px #{$_penumbra-color}',\\n  10: '0px 10px 14px 1px #{$_penumbra-color}',\\n  11: '0px 11px 15px 1px #{$_penumbra-color}',\\n  12: '0px 12px 17px 2px #{$_penumbra-color}',\\n  13: '0px 13px 19px 2px #{$_penumbra-color}',\\n  14: '0px 14px 21px 2px #{$_penumbra-color}',\\n  15: '0px 15px 22px 2px #{$_penumbra-color}',\\n  16: '0px 16px 24px 2px #{$_penumbra-color}',\\n  17: '0px 17px 26px 2px #{$_penumbra-color}',\\n  18: '0px 18px 28px 2px #{$_penumbra-color}',\\n  19: '0px 19px 29px 2px #{$_penumbra-color}',\\n  20: '0px 20px 31px 3px #{$_penumbra-color}',\\n  21: '0px 21px 33px 3px #{$_penumbra-color}',\\n  22: '0px 22px 35px 3px #{$_penumbra-color}',\\n  23: '0px 23px 36px 3px #{$_penumbra-color}',\\n  24: '0px 24px 38px 3px #{$_penumbra-color}'\\n);\\n\\n$_ambient-elevation-map: (\\n  0: '0px 0px 0px 0px #{$_ambient-color}',\\n  1: '0px 1px 3px 0px #{$_ambient-color}',\\n  2: '0px 1px 5px 0px #{$_ambient-color}',\\n  3: '0px 1px 8px 0px #{$_ambient-color}',\\n  4: '0px 1px 10px 0px #{$_ambient-color}',\\n  5: '0px 1px 14px 0px #{$_ambient-color}',\\n  6: '0px 1px 18px 0px #{$_ambient-color}',\\n  7: '0px 2px 16px 1px #{$_ambient-color}',\\n  8: '0px 3px 14px 2px #{$_ambient-color}',\\n  9: '0px 3px 16px 2px #{$_ambient-color}',\\n  10: '0px 4px 18px 3px #{$_ambient-color}',\\n  11: '0px 4px 20px 3px #{$_ambient-color}',\\n  12: '0px 5px 22px 4px #{$_ambient-color}',\\n  13: '0px 5px 24px 4px #{$_ambient-color}',\\n  14: '0px 5px 26px 4px #{$_ambient-color}',\\n  15: '0px 6px 28px 5px #{$_ambient-color}',\\n  16: '0px 6px 30px 5px #{$_ambient-color}',\\n  17: '0px 6px 32px 5px #{$_ambient-color}',\\n  18: '0px 7px 34px 6px #{$_ambient-color}',\\n  19: '0px 7px 36px 6px #{$_ambient-color}',\\n  20: '0px 8px 38px 7px #{$_ambient-color}',\\n  21: '0px 8px 40px 7px #{$_ambient-color}',\\n  22: '0px 8px 42px 7px #{$_ambient-color}',\\n  23: '0px 9px 44px 8px #{$_ambient-color}',\\n  24: '0px 9px 46px 8px #{$_ambient-color}'\\n);\\n\\n\\n// The default duration value for elevation transitions.\\n$mat-elevation-transition-duration: 280ms !default;\\n\\n// The default easing value for elevation transitions.\\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\\n\\n// Prefix for elevation-related selectors.\\n$_mat-elevation-prefix: 'mat-elevation-z';\\n\\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\\n// The $zValue must be between 0 and 24.\\n@mixin mat-elevation($zValue) {\\n  @if type-of($zValue) != number or not unitless($zValue) {\\n    @error '$zValue must be a unitless number';\\n  }\\n  @if $zValue < 0 or $zValue > 24 {\\n    @error '$zValue must be between 0 and 24';\\n  }\\n\\n  box-shadow: #{map-get($_umbra-elevation-map, $zValue)},\\n              #{map-get($_penumbra-elevation-map, $zValue)},\\n              #{map-get($_ambient-elevation-map, $zValue)};\\n}\\n\\n// Applies the elevation to an element in a manner that allows\\n// consumers to override it via the Material elevation classes.\\n@mixin mat-overridable-elevation($zValue) {\\n  &:not([class*='#{$_mat-elevation-prefix}']) {\\n    @include mat-elevation($zValue);\\n  }\\n}\\n\\n// Returns a string that can be used as the value for a transition property for elevation.\\n// Calling this function directly is useful in situations where a component needs to transition\\n// more than one property.\\n//\\n// .foo {\\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\\n// }\\n@function mat-elevation-transition-property-value(\\n    $duration: $mat-elevation-transition-duration,\\n    $easing: $mat-elevation-transition-timing-function) {\\n  @return box-shadow #{$duration} #{$easing};\\n}\\n\\n// Applies the correct css rules needed to have an element transition between elevations.\\n// This mixin should be applied to elements whose elevation values will change depending on their\\n// context (e.g. when active or disabled).\\n//\\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\\n// be used in the same way by clients.\\n@mixin mat-elevation-transition(\\n    $duration: $mat-elevation-transition-duration,\\n    $easing: $mat-elevation-transition-timing-function) {\\n  transition: mat-elevation-transition-property-value($duration, $easing);\\n}\\n\\n// Color palettes from the Material Design spec.\\n// See https://www.google.com/design/spec/style/color.html\\n//\\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\\n\\n\\n$black-87-opacity: rgba(black, 0.87);\\n$white-87-opacity: rgba(white, 0.87);\\n$black-12-opacity: rgba(black, 0.12);\\n$white-12-opacity: rgba(white, 0.12);\\n$black-6-opacity: rgba(black, 0.06);\\n$white-6-opacity: rgba(white, 0.06);\\n\\n$mat-red: (\\n  50: #ffebee,\\n  100: #ffcdd2,\\n  200: #ef9a9a,\\n  300: #e57373,\\n  400: #ef5350,\\n  500: #f44336,\\n  600: #e53935,\\n  700: #d32f2f,\\n  800: #c62828,\\n  900: #b71c1c,\\n  A100: #ff8a80,\\n  A200: #ff5252,\\n  A400: #ff1744,\\n  A700: #d50000,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: white,\\n    A700: white,\\n  )\\n);\\n\\n$mat-pink: (\\n  50: #fce4ec,\\n  100: #f8bbd0,\\n  200: #f48fb1,\\n  300: #f06292,\\n  400: #ec407a,\\n  500: #e91e63,\\n  600: #d81b60,\\n  700: #c2185b,\\n  800: #ad1457,\\n  900: #880e4f,\\n  A100: #ff80ab,\\n  A200: #ff4081,\\n  A400: #f50057,\\n  A700: #c51162,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: white,\\n    A700: white,\\n  )\\n);\\n\\n$mat-purple: (\\n  50: #f3e5f5,\\n  100: #e1bee7,\\n  200: #ce93d8,\\n  300: #ba68c8,\\n  400: #ab47bc,\\n  500: #9c27b0,\\n  600: #8e24aa,\\n  700: #7b1fa2,\\n  800: #6a1b9a,\\n  900: #4a148c,\\n  A100: #ea80fc,\\n  A200: #e040fb,\\n  A400: #d500f9,\\n  A700: #aa00ff,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: white,\\n    400: white,\\n    500: $white-87-opacity,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: white,\\n    A700: white,\\n  )\\n);\\n\\n$mat-deep-purple: (\\n  50: #ede7f6,\\n  100: #d1c4e9,\\n  200: #b39ddb,\\n  300: #9575cd,\\n  400: #7e57c2,\\n  500: #673ab7,\\n  600: #5e35b1,\\n  700: #512da8,\\n  800: #4527a0,\\n  900: #311b92,\\n  A100: #b388ff,\\n  A200: #7c4dff,\\n  A400: #651fff,\\n  A700: #6200ea,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: white,\\n    400: white,\\n    500: $white-87-opacity,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: $white-87-opacity,\\n    A700: $white-87-opacity,\\n  )\\n);\\n\\n$mat-indigo: (\\n  50: #e8eaf6,\\n  100: #c5cae9,\\n  200: #9fa8da,\\n  300: #7986cb,\\n  400: #5c6bc0,\\n  500: #3f51b5,\\n  600: #3949ab,\\n  700: #303f9f,\\n  800: #283593,\\n  900: #1a237e,\\n  A100: #8c9eff,\\n  A200: #536dfe,\\n  A400: #3d5afe,\\n  A700: #304ffe,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: white,\\n    400: white,\\n    500: $white-87-opacity,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: white,\\n    A700: $white-87-opacity,\\n  )\\n);\\n\\n$mat-blue: (\\n  50: #e3f2fd,\\n  100: #bbdefb,\\n  200: #90caf9,\\n  300: #64b5f6,\\n  400: #42a5f5,\\n  500: #2196f3,\\n  600: #1e88e5,\\n  700: #1976d2,\\n  800: #1565c0,\\n  900: #0d47a1,\\n  A100: #82b1ff,\\n  A200: #448aff,\\n  A400: #2979ff,\\n  A700: #2962ff,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: white,\\n    A400: white,\\n    A700: white,\\n  )\\n);\\n\\n$mat-light-blue: (\\n  50: #e1f5fe,\\n  100: #b3e5fc,\\n  200: #81d4fa,\\n  300: #4fc3f7,\\n  400: #29b6f6,\\n  500: #03a9f4,\\n  600: #039be5,\\n  700: #0288d1,\\n  800: #0277bd,\\n  900: #01579b,\\n  A100: #80d8ff,\\n  A200: #40c4ff,\\n  A400: #00b0ff,\\n  A700: #0091ea,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: white,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: white,\\n  )\\n);\\n\\n$mat-cyan: (\\n  50: #e0f7fa,\\n  100: #b2ebf2,\\n  200: #80deea,\\n  300: #4dd0e1,\\n  400: #26c6da,\\n  500: #00bcd4,\\n  600: #00acc1,\\n  700: #0097a7,\\n  800: #00838f,\\n  900: #006064,\\n  A100: #84ffff,\\n  A200: #18ffff,\\n  A400: #00e5ff,\\n  A700: #00b8d4,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: white,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-teal: (\\n  50: #e0f2f1,\\n  100: #b2dfdb,\\n  200: #80cbc4,\\n  300: #4db6ac,\\n  400: #26a69a,\\n  500: #009688,\\n  600: #00897b,\\n  700: #00796b,\\n  800: #00695c,\\n  900: #004d40,\\n  A100: #a7ffeb,\\n  A200: #64ffda,\\n  A400: #1de9b6,\\n  A700: #00bfa5,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-green: (\\n  50: #e8f5e9,\\n  100: #c8e6c9,\\n  200: #a5d6a7,\\n  300: #81c784,\\n  400: #66bb6a,\\n  500: #4caf50,\\n  600: #43a047,\\n  700: #388e3c,\\n  800: #2e7d32,\\n  900: #1b5e20,\\n  A100: #b9f6ca,\\n  A200: #69f0ae,\\n  A400: #00e676,\\n  A700: #00c853,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: white,\\n    700: white,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-light-green: (\\n  50: #f1f8e9,\\n  100: #dcedc8,\\n  200: #c5e1a5,\\n  300: #aed581,\\n  400: #9ccc65,\\n  500: #8bc34a,\\n  600: #7cb342,\\n  700: #689f38,\\n  800: #558b2f,\\n  900: #33691e,\\n  A100: #ccff90,\\n  A200: #b2ff59,\\n  A400: #76ff03,\\n  A700: #64dd17,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $black-87-opacity,\\n    700: white,\\n    800: white,\\n    900: white,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-lime: (\\n  50: #f9fbe7,\\n  100: #f0f4c3,\\n  200: #e6ee9c,\\n  300: #dce775,\\n  400: #d4e157,\\n  500: #cddc39,\\n  600: #c0ca33,\\n  700: #afb42b,\\n  800: #9e9d24,\\n  900: #827717,\\n  A100: #f4ff81,\\n  A200: #eeff41,\\n  A400: #c6ff00,\\n  A700: #aeea00,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $black-87-opacity,\\n    700: $black-87-opacity,\\n    800: $black-87-opacity,\\n    900: white,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-yellow: (\\n  50: #fffde7,\\n  100: #fff9c4,\\n  200: #fff59d,\\n  300: #fff176,\\n  400: #ffee58,\\n  500: #ffeb3b,\\n  600: #fdd835,\\n  700: #fbc02d,\\n  800: #f9a825,\\n  900: #f57f17,\\n  A100: #ffff8d,\\n  A200: #ffff00,\\n  A400: #ffea00,\\n  A700: #ffd600,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $black-87-opacity,\\n    700: $black-87-opacity,\\n    800: $black-87-opacity,\\n    900: $black-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-amber: (\\n  50: #fff8e1,\\n  100: #ffecb3,\\n  200: #ffe082,\\n  300: #ffd54f,\\n  400: #ffca28,\\n  500: #ffc107,\\n  600: #ffb300,\\n  700: #ffa000,\\n  800: #ff8f00,\\n  900: #ff6f00,\\n  A100: #ffe57f,\\n  A200: #ffd740,\\n  A400: #ffc400,\\n  A700: #ffab00,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $black-87-opacity,\\n    700: $black-87-opacity,\\n    800: $black-87-opacity,\\n    900: $black-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $black-87-opacity,\\n  )\\n);\\n\\n$mat-orange: (\\n  50: #fff3e0,\\n  100: #ffe0b2,\\n  200: #ffcc80,\\n  300: #ffb74d,\\n  400: #ffa726,\\n  500: #ff9800,\\n  600: #fb8c00,\\n  700: #f57c00,\\n  800: #ef6c00,\\n  900: #e65100,\\n  A100: #ffd180,\\n  A200: #ffab40,\\n  A400: #ff9100,\\n  A700: #ff6d00,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $black-87-opacity,\\n    700: $black-87-opacity,\\n    800: white,\\n    900: white,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: black,\\n  )\\n);\\n\\n$mat-deep-orange: (\\n  50: #fbe9e7,\\n  100: #ffccbc,\\n  200: #ffab91,\\n  300: #ff8a65,\\n  400: #ff7043,\\n  500: #ff5722,\\n  600: #f4511e,\\n  700: #e64a19,\\n  800: #d84315,\\n  900: #bf360c,\\n  A100: #ff9e80,\\n  A200: #ff6e40,\\n  A400: #ff3d00,\\n  A700: #dd2c00,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: white,\\n    600: white,\\n    700: white,\\n    800: white,\\n    900: white,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: white,\\n    A700: white,\\n  )\\n);\\n\\n$mat-brown: (\\n  50: #efebe9,\\n  100: #d7ccc8,\\n  200: #bcaaa4,\\n  300: #a1887f,\\n  400: #8d6e63,\\n  500: #795548,\\n  600: #6d4c41,\\n  700: #5d4037,\\n  800: #4e342e,\\n  900: #3e2723,\\n  A100: #d7ccc8,\\n  A200: #bcaaa4,\\n  A400: #8d6e63,\\n  A700: #5d4037,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: white,\\n    400: white,\\n    500: $white-87-opacity,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: white,\\n    A700: $white-87-opacity,\\n  )\\n);\\n\\n$mat-grey: (\\n  50: #fafafa,\\n  100: #f5f5f5,\\n  200: #eeeeee,\\n  300: #e0e0e0,\\n  400: #bdbdbd,\\n  500: #9e9e9e,\\n  600: #757575,\\n  700: #616161,\\n  800: #424242,\\n  900: #212121,\\n  A100: #ffffff,\\n  A200: #eeeeee,\\n  A400: #bdbdbd,\\n  A700: #616161,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: $black-87-opacity,\\n    500: $black-87-opacity,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: $black-87-opacity,\\n    A700: $white-87-opacity,\\n  )\\n);\\n\\n$mat-blue-grey: (\\n  50: #eceff1,\\n  100: #cfd8dc,\\n  200: #b0bec5,\\n  300: #90a4ae,\\n  400: #78909c,\\n  500: #607d8b,\\n  600: #546e7a,\\n  700: #455a64,\\n  800: #37474f,\\n  900: #263238,\\n  A100: #cfd8dc,\\n  A200: #b0bec5,\\n  A400: #78909c,\\n  A700: #455a64,\\n  contrast: (\\n    50: $black-87-opacity,\\n    100: $black-87-opacity,\\n    200: $black-87-opacity,\\n    300: $black-87-opacity,\\n    400: white,\\n    500: white,\\n    600: $white-87-opacity,\\n    700: $white-87-opacity,\\n    800: $white-87-opacity,\\n    900: $white-87-opacity,\\n    A100: $black-87-opacity,\\n    A200: $black-87-opacity,\\n    A400: white,\\n    A700: $white-87-opacity,\\n  )\\n);\\n\\n\\n// Background palette for light themes.\\n$mat-light-theme-background: (\\n  status-bar: map_get($mat-grey, 300),\\n  app-bar:    map_get($mat-grey, 100),\\n  background: map_get($mat-grey, 50),\\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\\n  card:       white,\\n  dialog:     white,\\n  disabled-button: $black-12-opacity,\\n  raised-button: white,\\n  focused-button: $black-6-opacity,\\n  selected-button: map_get($mat-grey, 300),\\n  selected-disabled-button: map_get($mat-grey, 400),\\n  disabled-button-toggle: map_get($mat-grey, 200),\\n  unselected-chip: map_get($mat-grey, 300),\\n  disabled-list-option: map_get($mat-grey, 200),\\n);\\n\\n// Background palette for dark themes.\\n$mat-dark-theme-background: (\\n  status-bar: black,\\n  app-bar:    map_get($mat-grey, 900),\\n  background: #303030,\\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\\n  card:       map_get($mat-grey, 800),\\n  dialog:     map_get($mat-grey, 800),\\n  disabled-button: $white-12-opacity,\\n  raised-button: map-get($mat-grey, 800),\\n  focused-button: $white-6-opacity,\\n  selected-button: map_get($mat-grey, 900),\\n  selected-disabled-button: map_get($mat-grey, 800),\\n  disabled-button-toggle: black,\\n  unselected-chip: map_get($mat-grey, 700),\\n  disabled-list-option: black,\\n);\\n\\n// Foreground palette for light themes.\\n$mat-light-theme-foreground: (\\n  base:              black,\\n  divider:           $black-12-opacity,\\n  dividers:          $black-12-opacity,\\n  disabled:          rgba(black, 0.38),\\n  disabled-button:   rgba(black, 0.38),\\n  disabled-text:     rgba(black, 0.38),\\n  hint-text:         rgba(black, 0.38),\\n  secondary-text:    rgba(black, 0.54),\\n  icon:              rgba(black, 0.54),\\n  icons:             rgba(black, 0.54),\\n  text:              rgba(black, 0.87),\\n  slider-min:        rgba(black, 0.87),\\n  slider-off:        rgba(black, 0.26),\\n  slider-off-active: rgba(black, 0.38),\\n);\\n\\n// Foreground palette for dark themes.\\n$mat-dark-theme-foreground: (\\n  base:              white,\\n  divider:           $white-12-opacity,\\n  dividers:          $white-12-opacity,\\n  disabled:          rgba(white, 0.3),\\n  disabled-button:   rgba(white, 0.3),\\n  disabled-text:     rgba(white, 0.3),\\n  hint-text:         rgba(white, 0.3),\\n  secondary-text:    rgba(white, 0.7),\\n  icon:              white,\\n  icons:             white,\\n  text:              white,\\n  slider-min:        white,\\n  slider-off:        rgba(white, 0.3),\\n  slider-off-active: rgba(white, 0.3),\\n);\\n\\n\\n\\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\\n// @param $color-map\\n// @param $hue\\n@function mat-contrast($palette, $hue) {\\n  @return map-get(map-get($palette, contrast), $hue);\\n}\\n\\n\\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\\n// of the Material Design hues.\\n// @param $color-map\\n// @param $primary\\n// @param $lighter\\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700) {\\n  $result: map_merge($base-palette, (\\n    default: map-get($base-palette, $default),\\n    lighter: map-get($base-palette, $lighter),\\n    darker: map-get($base-palette, $darker),\\n\\n    default-contrast: mat-contrast($base-palette, $default),\\n    lighter-contrast: mat-contrast($base-palette, $lighter),\\n    darker-contrast: mat-contrast($base-palette, $darker)\\n  ));\\n\\n  // For each hue in the palette, add a \\\"-contrast\\\" color to the map.\\n  @each $hue, $color in $base-palette {\\n    $result: map_merge($result, (\\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\\n    ));\\n  }\\n\\n  @return $result;\\n}\\n\\n\\n// Gets a color from a theme palette (the output of mat-palette).\\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \\\"-contrast\\\".\\n//\\n// @param $color-map The theme palette (output of mat-palette).\\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\\n//     be treated as opacity.\\n// @param $opacity The alpha channel value for the color.\\n@function mat-color($palette, $hue: default, $opacity: null) {\\n  // If hueKey is a number between zero and one, then it actually contains an\\n  // opacity value, so recall this function with the default hue and that given opacity.\\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\\n    @return mat-color($palette, default, $hue);\\n  }\\n\\n  $color: map-get($palette, $hue);\\n  $opacity: if($opacity == null, opacity($color), $opacity);\\n\\n  @return rgba($color, $opacity);\\n}\\n\\n\\n// Creates a container object for a light theme to be given to individual component theme mixins.\\n@function mat-light-theme($primary, $accent, $warn: mat-palette($mat-red)) {\\n  @return (\\n    primary: $primary,\\n    accent: $accent,\\n    warn: $warn,\\n    is-dark: false,\\n    foreground: $mat-light-theme-foreground,\\n    background: $mat-light-theme-background,\\n  );\\n}\\n\\n\\n// Creates a container object for a dark theme to be given to individual component theme mixins.\\n@function mat-dark-theme($primary, $accent, $warn: mat-palette($mat-red)) {\\n  @return (\\n    primary: $primary,\\n    accent: $accent,\\n    warn: $warn,\\n    is-dark: true,\\n    foreground: $mat-dark-theme-foreground,\\n    background: $mat-dark-theme-background,\\n  );\\n}\\n\\n\\n\\n$mat-ripple-color-opacity: 0.1;\\n\\n@mixin mat-ripple() {\\n  // The host element of an mat-ripple directive should always have a position of \\\"absolute\\\" or\\n  // \\\"relative\\\" so that the ripple divs it creates inside itself are correctly positioned.\\n  .mat-ripple {\\n    overflow: hidden;\\n\\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\\n    @include cdk-high-contrast {\\n      display: none;\\n    }\\n  }\\n\\n  .mat-ripple.mat-ripple-unbounded {\\n    overflow: visible;\\n  }\\n\\n  .mat-ripple-element {\\n    position: absolute;\\n    border-radius: 50%;\\n    pointer-events: none;\\n\\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\\n    transform: scale(0);\\n  }\\n}\\n\\n/* Theme for the ripple elements.*/\\n@mixin mat-ripple-theme($theme) {\\n  $foreground: map_get($theme, foreground);\\n  $foreground-base: map_get($foreground, base);\\n\\n  .mat-ripple-element {\\n    background-color: rgba($foreground-base, $mat-ripple-color-opacity);\\n  }\\n}\\n\\n\\n\\n// This mixin will ensure that lines that overflow the container will hide the overflow and\\n// truncate neatly with an ellipsis.\\n@mixin mat-truncate-line() {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n\\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\\n// is in dense mode.\\n@mixin mat-line-base($secondary-font-size) {\\n  .mat-line {\\n    @include mat-truncate-line();\\n    display: block;\\n    box-sizing: border-box;\\n\\n    // all lines but the top line should have smaller text\\n    &:nth-child(n+2) {\\n      font-size: $secondary-font-size;\\n    }\\n  }\\n}\\n\\n// This mixin normalizes default element styles, e.g. font weight for heading text.\\n@mixin mat-normalize-text() {\\n  & > * {\\n    margin: 0;\\n    padding: 0;\\n    font-weight: normal;\\n    font-size: inherit;\\n  }\\n}\\n\\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\\n@mixin mat-line-wrapper-base() {\\n  @include mat-normalize-text();\\n\\n  display: flex;\\n  flex-direction: column;\\n  width: 100%;\\n  box-sizing: border-box;\\n  overflow: hidden;\\n\\n  // Must remove wrapper when lines are empty or it takes up horizontal\\n  // space and pushes other elements to the right.\\n  &:empty {\\n    display: none;\\n  }\\n}\\n\\n\\n/** The mixins below are shared between mat-menu and mat-select */\\n\\n// menu width must be a multiple of 56px\\n$mat-menu-overlay-min-width: 112px !default;   // 56 * 2\\n$mat-menu-overlay-max-width: 280px !default;   // 56 * 5\\n\\n$mat-menu-item-height: 48px !default;\\n$mat-menu-side-padding: 16px !default;\\n$mat-menu-icon-margin: 16px !default;\\n\\n\\n@mixin mat-menu-base($default-elevation) {\\n  @include mat-overridable-elevation($default-elevation);\\n  min-width: $mat-menu-overlay-min-width;\\n  max-width: $mat-menu-overlay-max-width;\\n  overflow: auto;\\n  -webkit-overflow-scrolling: touch;   // for momentum scroll on mobile\\n}\\n\\n@mixin mat-menu-item-base() {\\n  @include mat-truncate-line();\\n\\n  // Needs to be a block for the ellipsis to work.\\n  display: block;\\n  line-height: $mat-menu-item-height;\\n  height: $mat-menu-item-height;\\n  padding: 0 $mat-menu-side-padding;\\n\\n  text-align: left;\\n  text-decoration: none;   // necessary to reset anchor tags\\n\\n  &[disabled] {\\n    cursor: default;\\n  }\\n\\n  [dir='rtl'] & {\\n    text-align: right;\\n  }\\n\\n  .mat-icon {\\n    margin-right: $mat-menu-icon-margin;\\n\\n    [dir='rtl'] & {\\n      margin-left: $mat-menu-icon-margin;\\n      margin-right: 0;\\n    }\\n  }\\n}\\n\\n/**\\n * This mixin adds the correct panel transform styles based\\n * on the direction that the menu panel opens.\\n */\\n@mixin mat-menu-positions() {\\n  &.mat-menu-after.mat-menu-below {\\n    transform-origin: left top;\\n  }\\n\\n  &.mat-menu-after.mat-menu-above {\\n    transform-origin: left bottom;\\n  }\\n\\n  &.mat-menu-before.mat-menu-below {\\n    transform-origin: right top;\\n  }\\n\\n  &.mat-menu-before.mat-menu-above {\\n    transform-origin: right bottom;\\n  }\\n\\n  [dir='rtl'] & {\\n    &.mat-menu-after.mat-menu-below {\\n      transform-origin: right top;\\n    }\\n\\n    &.mat-menu-after.mat-menu-above {\\n      transform-origin: right bottom;\\n    }\\n\\n    &.mat-menu-before.mat-menu-below {\\n      transform-origin: left top;\\n    }\\n\\n    &.mat-menu-before.mat-menu-above {\\n      transform-origin: left bottom;\\n    }\\n  }\\n}\\n\\n/* stylelint-disable material/no-prefixes */\\n@mixin user-select($value) {\\n  -webkit-user-select: $value;\\n  -moz-user-select: $value;\\n  -ms-user-select: $value;\\n  user-select: $value;\\n}\\n\\n@mixin input-placeholder {\\n  &::placeholder {\\n    @content;\\n  }\\n\\n  &::-moz-placeholder {\\n    @content;\\n  }\\n\\n  &::-webkit-input-placeholder {\\n    @content;\\n  }\\n\\n  &:-ms-input-placeholder {\\n    @content;\\n  }\\n}\\n\\n@mixin cursor-grab {\\n  cursor: -webkit-grab;\\n  cursor: grab;\\n}\\n\\n@mixin cursor-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: grabbing;\\n}\\n\\n@mixin backface-visibility($value) {\\n  -webkit-backface-visibility: $value;\\n  backface-visibility: $value;\\n}\\n/* stylelint-enable */\\n\\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\\n@mixin mat-fill {\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  position: absolute;\\n}\\n\\n\\n\\n/**\\n * This mixin contains shared option styles between the select and\\n * autocomplete components.\\n */\\n@mixin mat-option() {\\n  .mat-option {\\n    @include mat-menu-item-base();\\n    position: relative;\\n    cursor: pointer;\\n    outline: none;\\n    display: flex;\\n    flex-direction: row;\\n    max-width: 100%;\\n    box-sizing: border-box;\\n    align-items: center;\\n\\n    &[aria-disabled='true'] {\\n      @include user-select(none);\\n      cursor: default;\\n    }\\n\\n    .mat-optgroup &:not(.mat-option-multiple) {\\n      padding-left: $mat-menu-side-padding * 2;\\n\\n      [dir='rtl'] & {\\n        padding-left: $mat-menu-side-padding;\\n        padding-right: $mat-menu-side-padding * 2;\\n      }\\n    }\\n  }\\n\\n  // Collapses unwanted whitespace created by newlines in code like the following:\\n  // <mat-option>\\n  //   {{value}}\\n  // </mat-option>\\n  .mat-option-text {\\n    display: inline-block;\\n    flex-grow: 1;\\n    overflow: hidden;\\n    text-overflow: ellipsis;\\n  }\\n\\n  .mat-option-ripple {\\n    @include mat-fill;\\n\\n    // Disable pointer events for the ripple container because the container will overlay the\\n    // user content and we don't want to disable mouse events on the user content.\\n    // Pointer events can be safely disabled because the ripple trigger element is the host element.\\n    pointer-events: none;\\n\\n    // Prevents the ripple from completely covering the option in high contrast mode.\\n    @include cdk-high-contrast {\\n      opacity: 0.5;\\n    }\\n  }\\n\\n  .mat-option-pseudo-checkbox {\\n    $margin: $mat-menu-side-padding / 2;\\n    margin-right: $margin;\\n\\n    [dir='rtl'] & {\\n      margin-left: $margin;\\n      margin-right: 0;\\n    }\\n  }\\n}\\n\\n\\n\\n\\n// Utility for fetching a nested value from a typography config.\\n@function _mat-get-type-value($config, $level, $name) {\\n  @return map-get(map-get($config, $level), $name);\\n}\\n\\n// Gets the font size for a level inside a typography config.\\n@function mat-font-size($config, $level) {\\n  @return _mat-get-type-value($config, $level, font-size);\\n}\\n\\n// Gets the line height for a level inside a typography config.\\n@function mat-line-height($config, $level) {\\n  @return _mat-get-type-value($config, $level, line-height);\\n}\\n\\n// Gets the font weight for a level inside a typography config.\\n@function mat-font-weight($config, $level) {\\n  @return _mat-get-type-value($config, $level, font-weight);\\n}\\n\\n// Gets the font-family from a typography config and removes the quotes around it.\\n@function mat-font-family($config, $level: null) {\\n  $font-family: map-get($config, font-family);\\n\\n  @if $level != null {\\n    $font-family: _mat-get-type-value($config, $level, font-family);\\n  }\\n\\n  @return unquote($font-family);\\n}\\n\\n// Converts a typography level into CSS styles.\\n@mixin mat-typography-level-to-styles($config, $level) {\\n  $font-size: mat-font-size($config, $level);\\n  $font-weight: mat-font-weight($config, $level);\\n  $line-height: mat-line-height($config, $level);\\n  $font-family: mat-font-family($config, $level);\\n\\n  // Use the shorthand `font` to represent a typography level, because it's the shortest. Notes that\\n  // we need to use interpolation for `font-size/line-height` in order to prevent SASS from dividing\\n  // the two values.\\n  font: $font-weight #{$font-size}/#{$line-height} $font-family;\\n}\\n\\n\\n@mixin mat-option-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  .mat-option {\\n    color: mat-color($foreground, text);\\n\\n    &:hover:not(.mat-option-disabled),\\n    &:focus:not(.mat-option-disabled) {\\n      background: mat-color($background, hover);\\n    }\\n\\n    .mat-primary &.mat-selected:not(.mat-option-disabled) {\\n      color: mat-color($primary);\\n    }\\n\\n    .mat-accent &.mat-selected:not(.mat-option-disabled) {\\n      color: mat-color($accent);\\n    }\\n\\n    .mat-warn &.mat-selected:not(.mat-option-disabled) {\\n      color: mat-color($warn);\\n    }\\n\\n    // In multiple mode there is a checkbox to show that the option is selected.\\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\\n      background: mat-color($background, hover);\\n    }\\n\\n    &.mat-active {\\n      background: mat-color($background, hover);\\n      color: mat-color($foreground, text);\\n    }\\n\\n    &.mat-option-disabled {\\n      color: mat-color($foreground, hint-text);\\n    }\\n  }\\n}\\n\\n@mixin mat-option-typography($config) {\\n  .mat-option {\\n    font: {\\n      family: mat-font-family($config, subheading-2);\\n      size: mat-font-size($config, subheading-2);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n@mixin mat-optgroup() {\\n  .mat-optgroup-label {\\n    @include mat-menu-item-base();\\n    @include user-select(none);\\n    cursor: default;\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-optgroup-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-optgroup-label {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-optgroup-disabled .mat-optgroup-label {\\n    color: mat-color($foreground, hint-text);\\n  }\\n}\\n\\n@mixin mat-optgroup-typography($config) {\\n  .mat-optgroup-label {\\n    @include mat-typography-level-to-styles($config, body-2);\\n  }\\n}\\n\\n\\n\\n@mixin mat-pseudo-checkbox-theme($theme) {\\n  $is-dark-theme: map-get($theme, is-dark);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n\\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\\n  // this does not work well with elements layered on top of one another. To get around this we\\n  // blend the colors together based on the base color and the theme background.\\n  $white-30pct-opacity-on-dark: #686868;\\n  $black-26pct-opacity-on-light: #b0b0b0;\\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\\n\\n  .mat-pseudo-checkbox {\\n    color: mat-color(map-get($theme, foreground), secondary-text);\\n\\n    &::after {\\n      color: mat-color($background, background);\\n    }\\n  }\\n\\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\\n  // theme from their parent, rather than implementing their own theming, which is why we\\n  // don't attach to the `mat-*` classes.\\n  .mat-pseudo-checkbox-checked,\\n  .mat-pseudo-checkbox-indeterminate,\\n  .mat-accent .mat-pseudo-checkbox-checked,\\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\\n    background: mat-color(map-get($theme, accent));\\n  }\\n\\n  .mat-primary .mat-pseudo-checkbox-checked,\\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\\n    background: mat-color(map-get($theme, primary));\\n  }\\n\\n  .mat-warn .mat-pseudo-checkbox-checked,\\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\\n    background: mat-color(map-get($theme, warn));\\n  }\\n\\n  .mat-pseudo-checkbox-checked,\\n  .mat-pseudo-checkbox-indeterminate {\\n    &.mat-pseudo-checkbox-disabled {\\n      background: $disabled-color;\\n    }\\n  }\\n}\\n\\n\\n\\n// Represents a typography level from the Material design spec.\\n@function mat-typography-level(\\n  $font-size,\\n  $line-height: $font-size,\\n  $font-weight: 400,\\n  $font-family: null) {\\n\\n  @return (\\n    font-size: $font-size,\\n    line-height: $line-height,\\n    font-weight: $font-weight,\\n    font-family: $font-family\\n  );\\n}\\n\\n// Represents a collection of typography levels.\\n// Defaults come from https://material.io/guidelines/style/typography.html\\n@function mat-typography-config(\\n  $font-family:   'Roboto, \\\"Helvetica Neue\\\", sans-serif',\\n  $display-4:     mat-typography-level(112px, 112px, 300),\\n  $display-3:     mat-typography-level(56px, 56px, 400),\\n  $display-2:     mat-typography-level(45px, 48px, 400),\\n  $display-1:     mat-typography-level(34px, 40px, 400),\\n  $headline:      mat-typography-level(24px, 32px, 400),\\n  $title:         mat-typography-level(20px, 32px, 500),\\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\\n  $body-2:        mat-typography-level(14px, 24px, 500),\\n  $body-1:        mat-typography-level(14px, 20px, 400),\\n  $caption:       mat-typography-level(12px, 20px, 400),\\n  $button:        mat-typography-level(14px, 14px, 500),\\n  // Line-height must be unit-less fraction of the font-size.\\n  $input:         mat-typography-level(16px, 1.125, 400)\\n) {\\n\\n  // Declare an initial map with all of the levels.\\n  $config: (\\n    display-4:      $display-4,\\n    display-3:      $display-3,\\n    display-2:      $display-2,\\n    display-1:      $display-1,\\n    headline:       $headline,\\n    title:          $title,\\n    subheading-2:   $subheading-2,\\n    subheading-1:   $subheading-1,\\n    body-2:         $body-2,\\n    body-1:         $body-1,\\n    caption:        $caption,\\n    button:         $button,\\n    input:          $input,\\n  );\\n\\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\\n  // Note that SASS can't modify maps in place, which means that we need to merge and re-assign.\\n  @each $key, $level in $config {\\n    @if map-get($level, font-family) == null {\\n      $new-level: map-merge($level, (font-family: $font-family));\\n      $config: map-merge($config, ($key: $new-level));\\n    }\\n  }\\n\\n  // Add the base font family to the config.\\n  @return map-merge($config, (font-family: $font-family));\\n}\\n\\n// Adds the base typography styles, based on a config.\\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\\n  .mat-h1, .mat-headline, #{$selector} h1 {\\n    @include mat-typography-level-to-styles($config, headline);\\n    margin: 0 0 16px;\\n  }\\n\\n  .mat-h2, .mat-title, #{$selector} h2 {\\n    @include mat-typography-level-to-styles($config, title);\\n    margin: 0 0 16px;\\n  }\\n\\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\\n    @include mat-typography-level-to-styles($config, subheading-2);\\n    margin: 0 0 16px;\\n  }\\n\\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\\n    @include mat-typography-level-to-styles($config, subheading-1);\\n    margin: 0 0 16px;\\n  }\\n\\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\\n  // and h6 at 0.67em.\\n  .mat-h5, #{$selector} h5 {\\n    font-size: mat-font-size($config, body-1) * 0.83;\\n    font-weight: mat-font-weight($config, body-1);\\n    font-family: mat-font-family($config, body-1);\\n    line-height: mat-line-height($config, body-1);\\n    margin: 0 0 12px;\\n  }\\n\\n  .mat-h6, #{$selector} h6 {\\n    font-size: mat-font-size($config, body-1) * 0.67;\\n    font-weight: mat-font-weight($config, body-1);\\n    font-family: mat-font-family($config, body-1);\\n    line-height: mat-line-height($config, body-1);\\n    margin: 0 0 12px;\\n  }\\n\\n  .mat-body-strong, .mat-body-2 {\\n    @include mat-typography-level-to-styles($config, body-2);\\n  }\\n\\n  .mat-body, .mat-body-1, #{$selector} {\\n    @include mat-typography-level-to-styles($config, body-1);\\n\\n    p {\\n      margin: 0 0 12px;\\n    }\\n  }\\n\\n  .mat-small, .mat-caption {\\n    @include mat-typography-level-to-styles($config, caption);\\n  }\\n\\n  // Note: The spec doesn't mention letter spacing. The value comes from\\n  // eyeballing it until it looked exactly like the spec examples.\\n  .mat-display-4, #{$selector} .mat-display-4 {\\n    @include mat-typography-level-to-styles($config, display-4);\\n    margin: 0 0 56px;\\n    letter-spacing: -0.05em;\\n  }\\n\\n  .mat-display-3, #{$selector} .mat-display-3 {\\n    @include mat-typography-level-to-styles($config, display-3);\\n    margin: 0 0 64px;\\n    letter-spacing: -0.02em;\\n  }\\n\\n  .mat-display-2, #{$selector} .mat-display-2 {\\n    @include mat-typography-level-to-styles($config, display-2);\\n    margin: 0 0 64px;\\n    letter-spacing: -0.005em;\\n  }\\n\\n  .mat-display-1, #{$selector} .mat-display-1 {\\n    @include mat-typography-level-to-styles($config, display-1);\\n    margin: 0 0 64px;\\n  }\\n}\\n\\n\\n\\n@mixin mat-autocomplete-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n\\n  .mat-autocomplete-panel {\\n    background: mat-color($background, card);\\n    color: mat-color($foreground, text);\\n\\n    // Selected options in autocompletes should not be gray, but we\\n    // only want to override the background for selected options if\\n    // they are *not* in hover or focus state. This change has to be\\n    // made here because base option styles are shared between the\\n    // autocomplete and the select.\\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\\n      background: mat-color($background, card);\\n\\n      &:not(.mat-option-disabled) {\\n        color: mat-color($foreground, text);\\n      }\\n    }\\n  }\\n\\n}\\n\\n@mixin mat-autocomplete-typography($config) { }\\n\\n\\n\\n\\n// Applies a focus style to an mat-button element for each of the supported palettes.\\n@mixin _mat-button-focus-color($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  &.mat-primary .mat-button-focus-overlay {\\n    background-color: mat-color($primary, 0.12);\\n  }\\n\\n  &.mat-accent .mat-button-focus-overlay {\\n    background-color: mat-color($accent, 0.12);\\n  }\\n\\n  &.mat-warn .mat-button-focus-overlay {\\n    background-color: mat-color($warn, 0.12);\\n  }\\n\\n  &[disabled] .mat-button-focus-overlay {\\n    background-color: transparent;\\n  }\\n}\\n\\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: 0.2) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  &.mat-primary .mat-ripple-element {\\n    background-color: mat-color($primary, $hue, $opacity);\\n  }\\n\\n  &.mat-accent .mat-ripple-element {\\n    background-color: mat-color($accent, $hue, $opacity);\\n  }\\n\\n  &.mat-warn .mat-ripple-element {\\n    background-color: mat-color($warn, $hue, $opacity);\\n  }\\n}\\n\\n// Applies a property to an mat-button element for each of the supported palettes.\\n@mixin _mat-button-theme-color($theme, $property, $color: 'default') {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  &.mat-primary {\\n    #{$property}: mat-color($primary, $color);\\n  }\\n  &.mat-accent {\\n    #{$property}: mat-color($accent, $color);\\n  }\\n  &.mat-warn {\\n    #{$property}: mat-color($warn, $color);\\n  }\\n\\n  &.mat-primary, &.mat-accent, &.mat-warn, &[disabled] {\\n    &[disabled] {\\n      $palette: if($property == 'color', $foreground, $background);\\n      #{$property}: mat-color($palette, disabled-button);\\n    }\\n  }\\n}\\n\\n@mixin mat-button-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-button, .mat-icon-button {\\n    background: transparent;\\n\\n    @include _mat-button-focus-color($theme);\\n    @include _mat-button-theme-color($theme, 'color');\\n  }\\n\\n  .mat-raised-button, .mat-fab, .mat-mini-fab {\\n    // Default properties when not using any [color] value.\\n    color: mat-color($foreground, text);\\n    background-color: mat-color($background, raised-button);\\n\\n    @include _mat-button-theme-color($theme, 'color', default-contrast);\\n    @include _mat-button-theme-color($theme, 'background-color');\\n\\n    // Add ripple effect with contrast color to buttons that don't have a focus overlay.\\n    @include _mat-button-ripple-color($theme, default-contrast);\\n  }\\n\\n  // Add ripple effect with default color to flat buttons, which also have a focus overlay.\\n  .mat-button {\\n    @include _mat-button-ripple-color($theme, default, 0.1);\\n  }\\n\\n  // Add ripple effect with default color to the icon button. Ripple color needs to be stronger\\n  // since the icon button doesn't have a focus overlay.\\n  .mat-icon-button {\\n    @include _mat-button-ripple-color($theme, default);\\n  }\\n}\\n\\n@mixin mat-button-typography($config) {\\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-fab, .mat-mini-fab {\\n    font: {\\n      family: mat-font-family($config, button);\\n      size: mat-font-size($config, button);\\n      weight: mat-font-weight($config, button);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n// Applies a focus style to an mat-button-toggle element for each of the supported palettes.\\n@mixin _mat-button-toggle-focus-color($theme) {\\n  $background: map-get($theme, background);\\n\\n  .mat-button-toggle-focus-overlay {\\n    background-color: mat-color($background, focused-button);\\n  }\\n}\\n\\n@mixin mat-button-toggle-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n\\n  .mat-button-toggle {\\n    color: mat-color($foreground, hint-text);\\n\\n    &.cdk-focused {\\n      @include _mat-button-toggle-focus-color($theme);\\n    }\\n  }\\n\\n  .mat-button-toggle-checked {\\n    background-color: mat-color($background, selected-button);\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-button-toggle-disabled {\\n    background-color: mat-color($background, disabled-button-toggle);\\n    color: mat-color($foreground, disabled-button);\\n\\n    &.mat-button-toggle-checked {\\n      background-color: mat-color($background, selected-disabled-button);\\n    }\\n  }\\n}\\n\\n@mixin mat-button-toggle-typography($config) {\\n  .mat-button-toggle {\\n    font-family: mat-font-family($config);\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n@mixin mat-card-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-card {\\n    background: mat-color($background, card);\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-card-subtitle {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n}\\n\\n@mixin mat-card-typography($config) {\\n  .mat-card {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-card-title {\\n    font: {\\n      size: mat-font-size($config, headline);\\n      weight: mat-font-weight($config, headline);\\n    }\\n  }\\n\\n  .mat-card-subtitle,\\n  .mat-card-content,\\n  .mat-card-header .mat-card-title {\\n    font-size: mat-font-size($config, body-1);\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-checkbox-theme($theme) {\\n  $is-dark-theme: map-get($theme, is-dark);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n\\n\\n  // The color of the checkbox's checkmark / mixedmark.\\n  $checkbox-mark-color: mat-color($background, background);\\n\\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\\n  // this does not work well with elements layered on top of one another. To get around this we\\n  // blend the colors together based on the base color and the theme background.\\n  $white-30pct-opacity-on-dark: #686868;\\n  $black-26pct-opacity-on-light: #b0b0b0;\\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\\n\\n  .mat-checkbox-frame {\\n    border-color: mat-color(map-get($theme, foreground), secondary-text);\\n  }\\n\\n  .mat-checkbox-checkmark {\\n    fill: $checkbox-mark-color;\\n  }\\n\\n  .mat-checkbox-checkmark-path {\\n    // !important is needed here because a stroke must be set as an attribute on the SVG in order\\n    // for line animation to work properly.\\n    stroke: $checkbox-mark-color !important;\\n  }\\n\\n  .mat-checkbox-mixedmark {\\n    background-color: $checkbox-mark-color;\\n  }\\n\\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\\n    &.mat-primary .mat-checkbox-background {\\n      background-color: mat-color($primary);\\n    }\\n\\n    &.mat-accent .mat-checkbox-background {\\n      background-color: mat-color($accent);\\n    }\\n\\n    &.mat-warn .mat-checkbox-background {\\n      background-color: mat-color($warn);\\n    }\\n  }\\n\\n  .mat-checkbox-disabled {\\n    &.mat-checkbox-checked, &.mat-checkbox-indeterminate {\\n      .mat-checkbox-background {\\n        background-color: $disabled-color;\\n      }\\n    }\\n\\n    &:not(.mat-checkbox-checked) {\\n      .mat-checkbox-frame {\\n        border-color: $disabled-color;\\n      }\\n    }\\n\\n    .mat-checkbox-label {\\n      color: $disabled-color;\\n    }\\n  }\\n\\n  .mat-checkbox:not(.mat-checkbox-disabled) {\\n    &.mat-primary .mat-checkbox-ripple .mat-ripple-element {\\n      background-color: mat-color($primary, 0.26);\\n    }\\n\\n    &.mat-accent .mat-checkbox-ripple .mat-ripple-element {\\n      background-color: mat-color($accent, 0.26);\\n    }\\n\\n    &.mat-warn .mat-checkbox-ripple .mat-ripple-element {\\n      background-color: mat-color($warn, 0.26);\\n    }\\n  }\\n}\\n\\n@mixin mat-checkbox-typography($config) {\\n  .mat-checkbox {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  // TODO(kara): Remove this style when fixing vertical baseline\\n  .mat-checkbox-layout .mat-checkbox-label {\\n    line-height: mat-line-height($config, body-2);\\n  }\\n}\\n\\n\\n\\n\\n\\n// TODO(crisbeto): these values don't correspond to any of the typography breakpoints.\\n$mat-chip-font-size: 13px;\\n$mat-chip-line-height: 18px;\\n$mat-chip-remove-font-size: 18px;\\n\\n@mixin mat-chips-theme-color($color) {\\n  @include mat-chips-color(mat-color($color, default-contrast), mat-color($color));\\n}\\n\\n@mixin mat-chips-color($foreground, $background) {\\n  background-color: $background;\\n  color: $foreground;\\n\\n  .mat-chip-remove {\\n    color: $foreground;\\n    opacity: 0.4;\\n  }\\n\\n  .mat-chip-remove:hover {\\n    opacity: 0.54;\\n  }\\n}\\n\\n@mixin mat-chips-theme($theme) {\\n  $is-dark-theme: map-get($theme, is-dark);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  $unselected-background: mat-color($background, unselected-chip);\\n  $unselected-foreground: mat-color($foreground, text);\\n\\n\\n  .mat-chip:not(.mat-basic-chip) {\\n    @include mat-chips-color($unselected-foreground, $unselected-background);\\n  }\\n\\n  .mat-chip.mat-chip-selected {\\n\\n    &.mat-primary {\\n      @include mat-chips-theme-color($primary);\\n    }\\n\\n    &.mat-warn {\\n      @include mat-chips-theme-color($warn);\\n    }\\n\\n    &.mat-accent {\\n      @include mat-chips-theme-color($accent);\\n    }\\n  }\\n}\\n\\n@mixin mat-chips-typography($config) {\\n  .mat-chip {\\n    font-size: $mat-chip-font-size;\\n    line-height: $mat-chip-line-height;\\n\\n    .mat-chip-remove.mat-icon {\\n      font-size: $mat-chip-remove-font-size;\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-table-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-table {\\n    background: mat-color($background, 'card');\\n  }\\n\\n  .mat-row, .mat-header-row {\\n    border-bottom-color: mat-color($foreground, divider);\\n  }\\n\\n  .mat-header-cell {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-cell {\\n    color: mat-color($foreground, text);\\n  }\\n}\\n\\n@mixin mat-table-typography($config) {\\n  .mat-table {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-header-cell {\\n    font-size: mat-font-size($config, caption);\\n    font-weight: mat-font-weight($config, body-2);\\n  }\\n\\n  .mat-cell {\\n    font-size: mat-font-size($config, body-1);\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n$mat-calendar-body-font-size: 13px !default;\\n$mat-calendar-weekday-table-font-size: 11px !default;\\n\\n\\n@mixin mat-datepicker-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n\\n  $mat-datepicker-selected-today-box-shadow-width: 1px;\\n  $mat-datepicker-selected-fade-amount: 0.6;\\n  $mat-datepicker-today-fade-amount: 0.2;\\n\\n  .mat-datepicker-content {\\n    background-color: mat-color($background, card);\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-calendar-arrow {\\n    border-top-color: mat-color($foreground, icon);\\n  }\\n\\n  .mat-calendar-next-button,\\n  .mat-calendar-previous-button {\\n    color: mat-color($foreground, icon);\\n  }\\n\\n  .mat-calendar-table-header {\\n    color: mat-color($foreground, hint-text);\\n  }\\n\\n  .mat-calendar-table-header-divider::after {\\n    background: mat-color($foreground, divider);\\n  }\\n\\n  .mat-calendar-body-label {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-calendar-body-cell-content {\\n    color: mat-color($foreground, text);\\n    border-color: transparent;\\n\\n    .mat-calendar-body-disabled > &:not(.mat-calendar-body-selected) {\\n      color: mat-color($foreground, disabled-text);\\n    }\\n  }\\n\\n  :not(.mat-calendar-body-disabled):hover,\\n  .cdk-keyboard-focused .mat-calendar-body-active,\\n  .cdk-program-focused .mat-calendar-body-active {\\n    & > .mat-calendar-body-cell-content:not(.mat-calendar-body-selected) {\\n      background-color: mat-color($background, hover);\\n    }\\n  }\\n\\n  .mat-calendar-body-selected {\\n    background-color: mat-color($primary);\\n    color: mat-color($primary, default-contrast);\\n  }\\n\\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\\n    background-color: fade-out(mat-color($primary), $mat-datepicker-selected-fade-amount);\\n  }\\n\\n  .mat-calendar-body-today {\\n    &:not(.mat-calendar-body-selected) {\\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\\n      // so we use the hint color.\\n      border-color: mat-color($foreground, hint-text);\\n    }\\n\\n    &.mat-calendar-body-selected {\\n      box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\\n                  mat-color($primary, default-contrast);\\n    }\\n  }\\n\\n  .mat-calendar-body-disabled > .mat-calendar-body-today:not(.mat-calendar-body-selected) {\\n    border-color: fade-out(mat-color($foreground, hint-text), $mat-datepicker-today-fade-amount);\\n  }\\n}\\n\\n@mixin mat-datepicker-typography($config) {\\n  .mat-calendar {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-calendar-body {\\n    font-size: $mat-calendar-body-font-size;\\n  }\\n\\n  .mat-calendar-body-label,\\n  .mat-calendar-period-button {\\n    font: {\\n      size: mat-font-size($config, button);\\n      weight: mat-font-weight($config, button);\\n    }\\n  }\\n\\n  .mat-calendar-table-header th {\\n    font: {\\n      size: $mat-calendar-weekday-table-font-size;\\n      weight: mat-font-weight($config, body-1);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n@mixin mat-dialog-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-dialog-container {\\n    background: mat-color($background, dialog);\\n    color: mat-color($foreground, text);\\n  }\\n}\\n\\n@mixin mat-dialog-typography($config) {\\n  .mat-dialog-title {\\n    @include mat-typography-level-to-styles($config, title);\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-expansion-panel-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-expansion-panel {\\n    background: mat-color($background, card);\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-action-row {\\n    border-top-color: mat-color($foreground, divider);\\n  }\\n\\n  .mat-expansion-panel:not(.mat-expanded) .mat-expansion-panel-header {\\n    &:not([aria-disabled='true']) {\\n      &.cdk-keyboard-focused,\\n      &.cdk-program-focused,\\n      &:hover {\\n        background: mat-color($background, hover);\\n      }\\n    }\\n  }\\n\\n  .mat-expansion-panel-header-title {\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-expansion-panel-header-description,\\n  .mat-expansion-indicator::after {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-expansion-panel-header[aria-disabled='true'] {\\n    color: mat-color($foreground, disabled-button);\\n\\n    .mat-expansion-panel-header-title,\\n    .mat-expansion-panel-header-description {\\n      color: inherit;\\n    }\\n  }\\n}\\n\\n@mixin mat-expansion-panel-typography($config) {\\n  .mat-expansion-panel-header {\\n    font: {\\n      family: mat-font-family($config, subheading-1);\\n      size: mat-font-size($config, subheading-1);\\n      weight: mat-font-weight($config, subheading-1);\\n    }\\n  }\\n\\n  .mat-expansion-panel-content {\\n    @include mat-typography-level-to-styles($config, body-1);\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n\\n// Include this empty mixin for consistency with the other components.\\n@mixin mat-grid-list-theme($theme) { }\\n\\n@mixin mat-grid-list-typography($config) {\\n  .mat-grid-tile-header,\\n  .mat-grid-tile-footer {\\n    @include mat-line-base(mat-font-size($config, caption));\\n    font-size: mat-font-size($config, body-1);\\n  }\\n}\\n\\n\\n\\n\\n// Include this empty mixin for consistency with the other components.\\n@mixin mat-icon-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-icon {\\n    &.mat-primary {\\n      color: mat-color($primary);\\n    }\\n\\n    &.mat-accent {\\n      color: mat-color($accent);\\n    }\\n\\n    &.mat-warn {\\n      color: mat-color($warn);\\n    }\\n  }\\n}\\n\\n@mixin mat-icon-typography($config) { }\\n\\n\\n\\n\\n\\n// Renders a gradient for showing the dashed line when the input is disabled.\\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\\n// to match the Material Design spec.\\n@mixin mat-control-disabled-underline($color) {\\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\\n  background-size: 4px 1px;\\n  background-repeat: repeat-x;\\n}\\n\\n// Figures out the color of the placeholder for a form control.\\n// Used primarily to prevent the various form controls from\\n// becoming out of sync since these colors aren't in a pallette.\\n@function _mat-control-placeholder-color($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $is-dark-theme: map-get($theme, is-dark);\\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\\n}\\n\\n\\n\\n\\n\\n@mixin mat-input-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-input-element:disabled {\\n    color: mat-color($foreground, disabled-text);\\n  }\\n\\n  .mat-input-element {\\n    @include input-placeholder {\\n      color: _mat-control-placeholder-color($theme);\\n    }\\n  }\\n}\\n\\n@mixin mat-input-typography($config) {\\n  // The unit-less line-height from the font config.\\n  $line-height: mat-line-height($config, input);\\n\\n  // The amount of space between the top of the line and the top of the actual text\\n  // (as a fraction of the font-size).\\n  $line-spacing: ($line-height - 1) / 2;\\n\\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\\n  input.mat-input-element {\\n    margin-top: -$line-spacing * 1em;\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n\\n@mixin mat-list-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-list, .mat-nav-list, .mat-selection-list {\\n    .mat-list-item {\\n      color: mat-color($foreground, text);\\n    }\\n\\n    .mat-list-option {\\n      color: mat-color($foreground, text);\\n    }\\n\\n    .mat-subheader {\\n      color: mat-color($foreground, secondary-text);\\n    }\\n  }\\n\\n  .mat-list-item-disabled {\\n    background-color: mat-color($background, disabled-list-option);\\n  }\\n\\n  .mat-divider {\\n    border-top-color: mat-color($foreground, divider);\\n  }\\n\\n  .mat-nav-list .mat-list-item {\\n    outline: none;\\n\\n    &:hover, &.mat-list-item-focus {\\n      background: mat-color($background, 'hover');\\n    }\\n  }\\n\\n  .mat-list-option {\\n    outline: none;\\n\\n    &:hover, &.mat-list-item-focus {\\n      background: mat-color($background, 'hover');\\n    }\\n  }\\n}\\n\\n@mixin mat-list-typography($config) {\\n  $font-family: mat-font-family($config);\\n\\n  .mat-list-item {\\n    font-family: $font-family;\\n  }\\n\\n  .mat-list-option {\\n    font-family: $font-family;\\n  }\\n\\n  // Default list\\n  .mat-list, .mat-nav-list, .mat-selection-list {\\n    .mat-list-item {\\n      font-size: mat-font-size($config, subheading-2);\\n      @include mat-line-base(mat-font-size($config, body-1));\\n    }\\n\\n    .mat-list-option {\\n      font-size: mat-font-size($config, subheading-2);\\n      @include mat-line-base(mat-font-size($config, body-1));\\n    }\\n\\n    .mat-subheader {\\n      font-family: mat-font-family($config, body-2);\\n      font-size: mat-font-size($config, body-2);\\n      font-weight: mat-font-weight($config, body-2);\\n    }\\n  }\\n\\n  // Dense list\\n  .mat-list[dense], .mat-nav-list[dense], .mat-selection-list[dense] {\\n    .mat-list-item {\\n      font-size: mat-font-size($config, caption);\\n      @include mat-line-base(mat-font-size($config, caption));\\n    }\\n\\n    .mat-list-option {\\n      font-size: mat-font-size($config, caption);\\n      @include mat-line-base(mat-font-size($config, caption));\\n    }\\n\\n    .mat-subheader {\\n      font-family: $font-family;\\n      font-size: mat-font-size($config, caption);\\n      font-weight: mat-font-weight($config, body-2);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n@mixin mat-menu-theme($theme) {\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-menu-panel {\\n    background: mat-color($background, 'card');\\n  }\\n\\n  .mat-menu-item {\\n    background: transparent;\\n    color: mat-color($foreground, 'text');\\n\\n    &[disabled] {\\n      color: mat-color($foreground, 'disabled');\\n    }\\n  }\\n\\n  .mat-menu-item .mat-icon:not([color]),\\n  .mat-menu-item-submenu-trigger::after {\\n    color: mat-color($foreground, 'icon');\\n  }\\n\\n  .mat-menu-item:hover,\\n  .mat-menu-item:focus,\\n  .mat-menu-item-highlighted {\\n    &:not([disabled]) {\\n      background: mat-color($background, 'hover');\\n    }\\n  }\\n}\\n\\n@mixin mat-menu-typography($config) {\\n  .mat-menu-item {\\n    font: {\\n      family: mat-font-family($config, subheading-2);\\n      size: mat-font-size($config, subheading-2);\\n      weight: mat-font-weight($config, subheading-2);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n@mixin mat-paginator-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n\\n  .mat-paginator {\\n    background: mat-color($background, 'card');\\n  }\\n\\n  .mat-paginator,\\n  .mat-paginator-page-size .mat-select-trigger {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-paginator-increment,\\n  .mat-paginator-decrement {\\n    border-top: 2px solid mat-color($foreground, 'icon');\\n    border-right: 2px solid mat-color($foreground, 'icon');\\n  }\\n\\n  .mat-icon-button[disabled] {\\n    .mat-paginator-increment,\\n    .mat-paginator-decrement {\\n      border-color: mat-color($foreground, 'disabled');\\n    }\\n  }\\n}\\n\\n@mixin mat-paginator-typography($config) {\\n  .mat-paginator,\\n  .mat-paginator-page-size .mat-select-trigger {\\n    font: {\\n      family: mat-font-family($config, caption);\\n      size: mat-font-size($config, caption);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-progress-bar-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  .mat-progress-bar-background {\\n    background-image: #{_mat-progress-bar-buffer($primary, lighter)};\\n  }\\n\\n  .mat-progress-bar-buffer {\\n    background-color: mat-color($primary, lighter);\\n  }\\n\\n  .mat-progress-bar-fill::after {\\n    background-color: mat-color($primary);\\n  }\\n\\n  .mat-progress-bar.mat-accent {\\n    .mat-progress-bar-background {\\n      background-image: #{_mat-progress-bar-buffer($accent, lighter)};\\n    }\\n\\n    .mat-progress-bar-buffer {\\n      background-color: mat-color($accent, lighter);\\n    }\\n\\n    .mat-progress-bar-fill::after {\\n      background-color: mat-color($accent);\\n    }\\n  }\\n\\n  .mat-progress-bar.mat-warn {\\n    .mat-progress-bar-background {\\n      background-image: #{_mat-progress-bar-buffer($warn, lighter)};\\n    }\\n\\n    .mat-progress-bar-buffer {\\n      background-color: mat-color($warn, lighter);\\n    }\\n\\n    .mat-progress-bar-fill::after {\\n      background-color: mat-color($warn);\\n    }\\n  }\\n}\\n\\n@mixin mat-progress-bar-typography($config) { }\\n\\n// TODO(josephperrott): Find better way to inline svgs.\\n// In buffer mode a repeated SVG object is used as a background.\\n// Each of the following defines the SVG object for each of the class defined colors.\\n//\\n// The string is a URL encoded version of:\\n//\\n// <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"\\n//      version=\\\"1.1\\\" x=\\\"0px\\\" y=\\\"0px\\\" enable-background=\\\"new 0 0 5 2\\\"\\n//      xml:space=\\\"preserve\\\" viewBox=\\\"0 0 5 2\\\" preserveAspectRatio=\\\"none slice\\\">\\n//   <circle cx=\\\"1\\\" cy=\\\"1\\\" r=\\\"1\\\" fill=\\\"{INJECTED_COLOR}\\\"/>\\n// </svg>\\n@function _mat-progress-bar-buffer($palette, $hue) {\\n  $color: mat-color($palette, $hue) + '';\\n\\n  // We also need to escape the hash in hex colors,\\n  // otherwise IE will throw an XML error.\\n  @if str-index($color, '#') == 1 {\\n    $color: '%23' + str-slice($color, 2);\\n  }\\n\\n  $result: '' +\\n    'data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%271.1%27%20xmlns%3D%27http%3A%2F%2F' +\\n    'www.w3.org%2F2000%2Fsvg%27%20xmlns%3Axlink%3D%27http%3A%2F%2Fwww.w3.org%2F1999%2Fxlink%2' +\\n    '7%20x%3D%270px%27%20y%3D%270px%27%20enable-background%3D%27new%200%200%205%202%27%20xml%' +\\n    '3Aspace%3D%27preserve%27%20viewBox%3D%270%200%205%202%27%20preserveAspectRatio%3D%27none' +\\n    '%20slice%27%3E%3Ccircle%20cx%3D%271%27%20cy%3D%271%27%20r%3D%271%27%20fill%3D%27' +\\n    $color + '%27%2F%3E%3C%2Fsvg%3E';\\n\\n  @return url($result);\\n}\\n\\n\\n\\n\\n\\n@mixin mat-progress-spinner-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  .mat-progress-spinner, .mat-spinner {\\n    circle {\\n      stroke: mat-color($primary);\\n    }\\n\\n    &.mat-accent circle {\\n      stroke: mat-color($accent);\\n    }\\n\\n    &.mat-warn circle {\\n      stroke: mat-color($warn);\\n    }\\n  }\\n}\\n\\n@mixin mat-progress-spinner-typography($config) { }\\n\\n\\n\\n\\n\\n@mixin mat-radio-color($palette) {\\n  &.mat-radio-checked .mat-radio-outer-circle {\\n    border-color: mat-color($palette);\\n  }\\n\\n  .mat-radio-inner-circle {\\n    background-color: mat-color($palette);\\n  }\\n\\n  .mat-radio-ripple .mat-ripple-element {\\n    background-color: mat-color($palette, 0.26);\\n  }\\n}\\n\\n@mixin mat-radio-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-radio-outer-circle {\\n    border-color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-radio-disabled .mat-radio-outer-circle {\\n    border-color: mat-color($foreground, disabled);\\n  }\\n\\n  .mat-radio-disabled {\\n    .mat-radio-ripple .mat-ripple-element, .mat-radio-inner-circle {\\n      background-color: mat-color($foreground, disabled);\\n    }\\n\\n    .mat-radio-label-content {\\n      color: mat-color($foreground, disabled);\\n    }\\n  }\\n\\n  .mat-radio-button {\\n    &.mat-primary {\\n      @include mat-radio-color($primary);\\n    }\\n\\n    &.mat-accent {\\n      @include mat-radio-color($accent);\\n    }\\n\\n    &.mat-warn {\\n      @include mat-radio-color($warn);\\n    }\\n  }\\n}\\n\\n@mixin mat-radio-typography($config) {\\n  .mat-radio-button {\\n    font-family: mat-font-family($config);\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n\\n@mixin mat-select-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n\\n  .mat-select-content, .mat-select-panel-done-animating {\\n    background: mat-color($background, card);\\n  }\\n\\n  .mat-select-value {\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-select-placeholder {\\n    color: _mat-control-placeholder-color($theme);\\n  }\\n\\n  .mat-select-disabled .mat-select-value {\\n    color: mat-color($foreground, disabled-text);\\n  }\\n\\n  .mat-select-arrow {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-select-panel {\\n    .mat-option.mat-selected:not(.mat-option-multiple) {\\n      background: mat-color($background, hover, 0.12);\\n    }\\n  }\\n\\n  .mat-form-field {\\n    &.mat-focused {\\n      &.mat-primary .mat-select-arrow {\\n        color: mat-color($primary);\\n      }\\n\\n      &.mat-accent .mat-select-arrow {\\n        color: mat-color($accent);\\n      }\\n\\n      &.mat-warn .mat-select-arrow {\\n        color: mat-color($warn);\\n      }\\n    }\\n\\n    .mat-select.mat-select-invalid .mat-select-arrow {\\n      color: mat-color($warn);\\n    }\\n\\n    .mat-select.mat-select-disabled .mat-select-arrow {\\n      color: mat-color($foreground, disabled-text);\\n    }\\n  }\\n}\\n\\n@mixin mat-select-typography($config) {\\n  // The unit-less line-height from the font config.\\n  $line-height: mat-line-height($config, input);\\n\\n  .mat-select {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-select-trigger {\\n    height: $line-height * 1em;\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-sidenav-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  // We use invert() here to have the darken the background color expected to be used. If the\\n  // background is light, we use a dark backdrop. If the background is dark,\\n  // we use a light backdrop.\\n  $drawer-backdrop-color: invert(mat-color($background, card, 0.6)) !default;\\n  $drawer-background-color: mat-color($background, dialog) !default;\\n  $drawer-container-background-color:  mat-color($background, background) !default;\\n  $drawer-push-background-color: mat-color($background, dialog) !default;\\n\\n  .mat-drawer-container {\\n    background-color: $drawer-container-background-color;\\n    color: mat-color($foreground, text);\\n  }\\n\\n  .mat-drawer {\\n    background-color: $drawer-background-color;\\n    color: mat-color($foreground, text);\\n\\n    &.mat-drawer-push {\\n      background-color: $drawer-push-background-color;\\n    }\\n  }\\n\\n  .mat-drawer-backdrop.mat-drawer-shown {\\n    background-color: $drawer-backdrop-color;\\n  }\\n}\\n\\n@mixin mat-sidenav-typography($config) { }\\n\\n\\n\\n\\n\\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\\n  // Do not apply the checked colors if the toggle is disabled, because the\\n  // specificity would be to high for the disabled styles.\\n  &.mat-checked:not(.mat-disabled) {\\n    .mat-slide-toggle-thumb {\\n      background-color: mat-color($palette, $thumb-checked-hue);\\n    }\\n\\n    .mat-slide-toggle-bar {\\n      background-color: mat-color($palette, $thumb-checked-hue, 0.5);\\n    }\\n  }\\n}\\n\\n// Applies the specified colors to the slide-toggle ripple elements.\\n@mixin _mat-slide-toggle-ripple($palette, $ripple-unchecked-color, $ripple-checked-color) {\\n  &:not(.mat-checked) .mat-ripple-element {\\n    background-color: $ripple-unchecked-color;\\n  }\\n  .mat-ripple-element {\\n    background-color: $ripple-checked-color;\\n  }\\n}\\n\\n@mixin mat-slide-toggle-theme($theme) {\\n  $is-dark: map_get($theme, is-dark);\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  // Color hues based on the specs, which prescribe different hues for dark and light themes\\n  // https://material.google.com/components/selection-controls.html#selection-controls-switch\\n  $thumb-normal-hue: if($is-dark, 400, 50);\\n  $thumb-checked-hue: if($is-dark, 200, 500);\\n  $thumb-disabled-hue: if($is-dark, 800, 400);\\n\\n  $bar-normal-color: mat-color($foreground, disabled);\\n  $bar-disabled-color: if($is-dark, rgba(white, 0.12), rgba(black, 0.1));\\n\\n  // Ripple colors are based on the current palette and the state of the slide-toggle.\\n  // See https://material.google.com/components/selection-controls.html#selection-controls-switch\\n  $ripple-checked-opacity: 0.12;\\n  $ripple-unchecked-color: mat-color($foreground, base, if($is-dark, 0.12, 0.06));\\n  $ripple-primary-color: mat-color($primary, $thumb-checked-hue, $ripple-checked-opacity);\\n  $ripple-accent-color: mat-color($accent, $thumb-checked-hue, $ripple-checked-opacity);\\n  $ripple-warn-color: mat-color($warn, $thumb-checked-hue, $ripple-checked-opacity);\\n\\n  .mat-slide-toggle {\\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\\n    @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-accent-color);\\n\\n    &.mat-primary {\\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-primary-color);\\n    }\\n\\n    &.mat-warn {\\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\\n      @include _mat-slide-toggle-ripple($accent, $ripple-unchecked-color, $ripple-warn-color);\\n    }\\n\\n  }\\n\\n  .mat-disabled {\\n    .mat-slide-toggle-thumb {\\n      // The thumb of the slide-toggle always uses the hue 400 of the grey palette in dark\\n      // or light themes. Since this is very specific to the slide-toggle component, we're not\\n      // providing it in the background palette.\\n      background-color: mat-color($mat-grey, $thumb-disabled-hue);\\n    }\\n    .mat-slide-toggle-bar {\\n      background-color: $bar-disabled-color;\\n    }\\n  }\\n\\n  .mat-slide-toggle-thumb {\\n    background-color: mat-color($mat-grey, $thumb-normal-hue);\\n  }\\n\\n  .mat-slide-toggle-bar {\\n    background-color: $bar-normal-color;\\n  }\\n}\\n\\n@mixin mat-slide-toggle-typography($config) {\\n  .mat-slide-toggle-content {\\n    @include mat-typography-level-to-styles($config, body-1);\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin _mat-slider-inner-content-theme($palette) {\\n  .mat-slider-track-fill,\\n  .mat-slider-thumb,\\n  .mat-slider-thumb-label {\\n    background-color: mat-color($palette);\\n  }\\n\\n  .mat-slider-thumb-label-text {\\n    color: mat-color($palette, default-contrast);\\n  }\\n}\\n\\n@mixin mat-slider-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  $mat-slider-off-color: mat-color($foreground, slider-off);\\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\\n  $mat-slider-focus-ring-color: mat-color($accent, default, 0.2);\\n  $mat-slider-focus-ring-min-value-color: mat-color($foreground, base, 0.12);\\n  $mat-slider-tick-color: mat-color($foreground, base, 0.7);\\n  $mat-slider-tick-size: 2px;\\n\\n  .mat-slider-track-background {\\n    background-color: $mat-slider-off-color;\\n  }\\n\\n  .mat-primary {\\n    @include _mat-slider-inner-content-theme($primary);\\n  }\\n\\n  .mat-accent {\\n    @include _mat-slider-inner-content-theme($accent);\\n  }\\n\\n  .mat-warn {\\n    @include _mat-slider-inner-content-theme($warn);\\n  }\\n\\n  .mat-slider-focus-ring {\\n    background-color: $mat-slider-focus-ring-color;\\n  }\\n\\n  .mat-slider:hover,\\n  .cdk-focused {\\n    .mat-slider-track-background {\\n      background-color: $mat-slider-off-focused-color;\\n    }\\n  }\\n\\n  .mat-slider-disabled {\\n    .mat-slider-track-background,\\n    .mat-slider-track-fill,\\n    .mat-slider-thumb {\\n      background-color: $mat-slider-disabled-color;\\n    }\\n\\n    &:hover {\\n      .mat-slider-track-background {\\n        background-color: $mat-slider-disabled-color;\\n      }\\n    }\\n  }\\n\\n  .mat-slider-min-value {\\n    .mat-slider-focus-ring {\\n      background-color: $mat-slider-focus-ring-min-value-color;\\n    }\\n\\n    &.mat-slider-thumb-label-showing {\\n      .mat-slider-thumb,\\n      .mat-slider-thumb-label {\\n        background-color: $mat-slider-labeled-min-value-thumb-color;\\n      }\\n\\n      &.cdk-focused {\\n        .mat-slider-thumb,\\n        .mat-slider-thumb-label {\\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\\n        }\\n      }\\n    }\\n\\n    &:not(.mat-slider-thumb-label-showing) {\\n      .mat-slider-thumb {\\n        border-color: $mat-slider-off-color;\\n        background-color: transparent;\\n      }\\n\\n      &:hover,\\n      &.cdk-focused {\\n        .mat-slider-thumb {\\n          border-color: $mat-slider-off-focused-color;\\n        }\\n\\n        &.mat-slider-disabled .mat-slider-thumb {\\n          border-color: $mat-slider-disabled-color;\\n        }\\n      }\\n    }\\n  }\\n\\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\\n    border-color: $mat-slider-tick-color;\\n  }\\n\\n  .mat-slider-horizontal .mat-slider-ticks {\\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\\n    // Firefox doesn't draw the gradient correctly with 'to right'\\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\\n  }\\n\\n  .mat-slider-vertical .mat-slider-ticks {\\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\\n  }\\n}\\n\\n@mixin mat-slider-typography($config) {\\n  .mat-slider-thumb-label-text {\\n    font: {\\n      family: mat-font-family($config);\\n      size: mat-font-size($config, caption);\\n      weight: mat-font-weight($config, body-2);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-stepper-theme($theme) {\\n  $foreground: map-get($theme, foreground);\\n  $background: map-get($theme, background);\\n  $primary: map-get($theme, primary);\\n\\n  .mat-step-header {\\n    &.cdk-keyboard-focused,\\n    &.cdk-program-focused,\\n    &:hover {\\n      background-color: mat-color($background, hover);\\n    }\\n\\n    .mat-step-label,\\n    .mat-step-optional {\\n      color: mat-color($foreground, disabled-text);\\n    }\\n\\n    .mat-step-icon {\\n      background-color: mat-color($primary);\\n      color: mat-color($primary, default-contrast);\\n    }\\n\\n    .mat-step-icon-not-touched {\\n      background-color: mat-color($foreground, disabled-text);\\n      color: mat-color($primary, default-contrast);\\n    }\\n\\n    .mat-step-label.mat-step-label-active {\\n      color: mat-color($foreground, text);\\n    }\\n  }\\n\\n  .mat-stepper-horizontal, .mat-stepper-vertical {\\n    background-color: mat-color($background, card);\\n  }\\n\\n  .mat-stepper-vertical-line::before {\\n    border-left-color: mat-color($foreground, divider);\\n  }\\n\\n  .mat-stepper-horizontal-line {\\n    border-top-color: mat-color($foreground, divider);\\n  }\\n}\\n\\n@mixin mat-stepper-typography($config) {\\n  .mat-stepper-vertical, .mat-stepper-horizontal {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-step-label {\\n    font: {\\n      size: mat-font-size($config, body-1);\\n      weight: mat-font-weight($config, body-1);\\n    };\\n  }\\n\\n  .mat-step-label-selected {\\n    font: {\\n      size: mat-font-size($config, body-2);\\n      weight: mat-font-weight($config, body-2);\\n    };\\n  }\\n}\\n\\n\\n\\n\\n\\n@mixin mat-tabs-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n  $header-border: 1px solid mat-color($foreground, divider);\\n\\n  .mat-tab-nav-bar,\\n  .mat-tab-header {\\n    border-bottom: $header-border;\\n  }\\n\\n  .mat-tab-group-inverted-header {\\n    .mat-tab-nav-bar,\\n    .mat-tab-header {\\n      border-top: $header-border;\\n      border-bottom: none;\\n    }\\n  }\\n\\n  .mat-tab-label, .mat-tab-link {\\n    color: mat-color($foreground, text);\\n\\n    &.mat-tab-disabled {\\n      color: mat-color($foreground, disabled-text);\\n    }\\n  }\\n\\n  .mat-tab-header-pagination-chevron {\\n    border-color: mat-color($foreground, text);\\n  }\\n\\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n    border-color: mat-color($foreground, disabled-text);\\n  }\\n\\n  // Remove header border when there is a background color\\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\\n  .mat-tab-nav-bar[class*='mat-background-'] {\\n    border-bottom: none;\\n    border-top: none;\\n  }\\n\\n  .mat-tab-group, .mat-tab-nav-bar {\\n    $theme-colors: (\\n      primary: $primary,\\n      accent: $accent,\\n      warn: $warn\\n    );\\n\\n    @each $name, $color in $theme-colors {\\n      // Set the foreground color of the tabs\\n      &.mat-#{$name} {\\n        @include _mat-tab-label-focus($color);\\n        @include _mat-ink-bar($color);\\n\\n        // Override ink bar when background color is the same\\n        &.mat-background-#{$name} {\\n          @include _mat-ink-bar($color, default-contrast);\\n        }\\n      }\\n    }\\n\\n    @each $name, $color in $theme-colors {\\n      // Set background color of the tabs and override focus color\\n      &.mat-background-#{$name} {\\n        @include _mat-tab-label-focus($color);\\n        @include _mat-tabs-background($color);\\n      }\\n    }\\n  }\\n}\\n\\n@mixin _mat-ink-bar($color, $hue: default) {\\n  .mat-ink-bar {\\n    background-color: mat-color($color, $hue);\\n  }\\n}\\n\\n@mixin _mat-tab-label-focus($tab-focus-color) {\\n  .mat-tab-label:focus, .mat-tab-link:focus {\\n    background-color: mat-color($tab-focus-color, lighter, 0.3);\\n  }\\n}\\n\\n@mixin _mat-tabs-background($background-color) {\\n  // Set background color for the tab group\\n  .mat-tab-header, .mat-tab-links {\\n    background-color: mat-color($background-color);\\n  }\\n\\n  // Set labels to contrast against background\\n  .mat-tab-label, .mat-tab-link {\\n    color: mat-color($background-color, default-contrast);\\n\\n    &.mat-tab-disabled {\\n      color: mat-color($background-color, default-contrast, 0.4);\\n    }\\n  }\\n\\n  // Set pagination chevrons to contrast background\\n  .mat-tab-header-pagination-chevron {\\n    border-color: mat-color($background-color, default-contrast);\\n  }\\n\\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\\n    border-color: mat-color($background-color, default-contrast, 0.4);\\n  }\\n\\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\\n  // color will be based on the app background color.\\n  .mat-ripple-element {\\n    background-color: mat-color($background-color, default-contrast, 0.12);\\n  }\\n}\\n\\n@mixin mat-tabs-typography($config) {\\n  .mat-tab-group {\\n    font-family: mat-font-family($config);\\n  }\\n\\n  .mat-tab-label, .mat-tab-link {\\n    font: {\\n      family: mat-font-family($config, button);\\n      size: mat-font-size($config, button);\\n      weight: mat-font-weight($config, button);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n@mixin _mat-toolbar-color($palette) {\\n  background: mat-color($palette);\\n  color: mat-color($palette, default-contrast);\\n}\\n\\n@mixin mat-toolbar-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n\\n  .mat-toolbar {\\n    background: mat-color($background, app-bar);\\n    color: mat-color($foreground, text);\\n\\n    &.mat-primary {\\n      @include _mat-toolbar-color($primary);\\n    }\\n\\n    &.mat-accent {\\n      @include _mat-toolbar-color($accent);\\n    }\\n\\n    &.mat-warn {\\n      @include _mat-toolbar-color($warn);\\n    }\\n  }\\n}\\n\\n@mixin mat-toolbar-typography($config) {\\n  .mat-toolbar,\\n  .mat-toolbar h1,\\n  .mat-toolbar h2,\\n  .mat-toolbar h3,\\n  .mat-toolbar h4,\\n  .mat-toolbar h5,\\n  .mat-toolbar h6 {\\n    @include mat-typography-level-to-styles($config, title);\\n    margin: 0;\\n  }\\n}\\n\\n\\n\\n\\n\\n// TODO(crisbeto): these doesn't correspond to any typography levels\\n// and the width/height appear to be off from the spec.\\n$mat-tooltip-target-height: 22px;\\n$mat-tooltip-font-size: 10px;\\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\\n\\n@mixin mat-tooltip-theme($theme) {\\n  .mat-tooltip {\\n    background: mat-color($mat-grey, 700, 0.9);\\n  }\\n}\\n\\n@mixin mat-tooltip-typography($config) {\\n  .mat-tooltip {\\n    font-family: mat-font-family($config);\\n    font-size: $mat-tooltip-font-size;\\n    padding-top: $mat-tooltip-vertical-padding;\\n    padding-bottom: $mat-tooltip-vertical-padding;\\n  }\\n}\\n\\n\\n\\n\\n@mixin mat-snack-bar-theme($theme) {\\n  $is-dark-theme: map-get($theme, is-dark);\\n  $accent: map-get($theme, accent);\\n\\n  .mat-snack-bar-container {\\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\\n    color: if($is-dark-theme, $black-87-opacity, white);\\n  }\\n\\n  .mat-simple-snackbar-action {\\n    color: if($is-dark-theme, inherit, mat-color($accent));\\n  }\\n}\\n\\n@mixin mat-snack-bar-typography($config) {\\n  .mat-simple-snackbar {\\n    font: {\\n      family: mat-font-family($config, body-1);\\n      size: mat-font-size($config, body-1);\\n    }\\n  }\\n\\n  .mat-simple-snackbar-action {\\n    line-height: 1;\\n    font: {\\n      family: inherit;\\n      size: inherit;\\n      weight: mat-font-weight($config, button);\\n    }\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n@mixin mat-form-field-theme($theme) {\\n  $primary: map-get($theme, primary);\\n  $accent: map-get($theme, accent);\\n  $warn: map-get($theme, warn);\\n  $background: map-get($theme, background);\\n  $foreground: map-get($theme, foreground);\\n  $is-dark-theme: map-get($theme, is-dark);\\n\\n  // Label colors. Required is used for the `*` star shown in the label.\\n  $label-color: mat-color($foreground, secondary-text);\\n  $focused-label-color: mat-color($primary);\\n  $required-label-color: mat-color($accent);\\n\\n  // Underline colors.\\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\\n  $underline-color-accent: mat-color($accent);\\n  $underline-color-warn: mat-color($warn);\\n  $underline-focused-color: mat-color($primary);\\n\\n  .mat-form-field-label {\\n    color: $label-color;\\n  }\\n\\n  .mat-hint {\\n    color: mat-color($foreground, secondary-text);\\n  }\\n\\n  .mat-focused .mat-form-field-label {\\n    color: $focused-label-color;\\n\\n    &.mat-accent {\\n      color: $underline-color-accent;\\n    }\\n\\n    &.mat-warn {\\n      color: $underline-color-warn;\\n    }\\n  }\\n\\n  .mat-focused .mat-form-field-required-marker {\\n    color: $required-label-color;\\n  }\\n\\n  .mat-form-field-underline {\\n    background-color: $underline-color;\\n  }\\n\\n  .mat-form-field-disabled .mat-form-field-underline {\\n    @include mat-control-disabled-underline($underline-color);\\n  }\\n\\n  .mat-form-field-ripple {\\n    background-color: $underline-focused-color;\\n\\n    &.mat-accent {\\n      background-color: $underline-color-accent;\\n    }\\n\\n    &.mat-warn {\\n      background-color: $underline-color-warn;\\n    }\\n  }\\n\\n  // Styling for the error state of the form field. Note that while the same can be\\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\\n  // logic is used to style the error state and to show the error messages.\\n  .mat-form-field-invalid {\\n    .mat-form-field-label {\\n      color: $underline-color-warn;\\n\\n      &.mat-accent,\\n      .mat-form-field-required-marker {\\n        color: $underline-color-warn;\\n      }\\n    }\\n\\n    .mat-form-field-ripple {\\n      background-color: $underline-color-warn;\\n    }\\n  }\\n\\n  .mat-error {\\n    color: $underline-color-warn;\\n  }\\n}\\n\\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\\n// an unknown pseudo-class it will discard the entire rule set.\\n$dedupe: 0;\\n\\n// Applies a floating label above the form field control itself.\\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\\n  // We use perspective to fix the text blurriness as described here:\\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\\n  // This results in a small jitter after the label floats on Firefox, which the\\n  // translateZ fixes.\\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\\n             translateZ(0.001px + $dedupe);\\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\\n  // worse on IE, so we don't include them in the IE version.\\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $dedupe) scale($font-scale);\\n\\n  width: 100% / $font-scale + $dedupe;\\n\\n  $dedupe: $dedupe + 0.00001 !global;\\n}\\n\\n@mixin mat-form-field-typography($config) {\\n  // The unit-less line-height from the font config.\\n  $line-height: mat-line-height($config, input);\\n\\n  // The amount to scale the font for the floating label and subscript.\\n  $subscript-font-scale: 0.75;\\n  // The amount to scale the font for the prefix and suffix icons.\\n  $prefix-suffix-icon-font-scale: 1.5;\\n\\n  // The amount of space between the top of the line and the top of the actual text\\n  // (as a fraction of the font-size).\\n  $line-spacing: ($line-height - 1) / 2;\\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\\n  $infix-padding: 0.5em - $line-spacing;\\n  // The margin applied to the form-field-infix to reserve space for the floating label.\\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\\n  // Font size to use for the label and subscript text.\\n  $subscript-font-size: $subscript-font-scale * 100%;\\n  // Font size to use for the for the prefix and suffix icons.\\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\\n  // text font size, so we need to divide by the scale factor to make it half of the original text\\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\\n  // text, not the  edge of the line.\\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\\n\\n  .mat-form-field {\\n    font-family: mat-font-family($config);\\n    font-size: inherit;\\n    font-weight: mat-font-weight($config, input);\\n    line-height: mat-line-height($config, input);\\n  }\\n\\n  .mat-form-field-wrapper {\\n    padding-bottom: $wrapper-padding-bottom;\\n  }\\n\\n  .mat-form-field-prefix,\\n  .mat-form-field-suffix {\\n    // Allow icons in a prefix or suffix to adapt to the correct size.\\n    .mat-icon {\\n      font-size: $prefix-suffix-icon-font-size;\\n      line-height: $line-height;\\n    }\\n\\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\\n    .mat-icon-button {\\n      height: $prefix-suffix-icon-font-scale * 1em;\\n      width: $prefix-suffix-icon-font-scale * 1em;\\n\\n      .mat-icon {\\n        height: $line-height * 1em;\\n        line-height: $line-height;\\n      }\\n    }\\n  }\\n\\n  .mat-form-field-infix {\\n    padding: $infix-padding 0;\\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\\n    border-top: $infix-margin-top solid transparent;\\n  }\\n\\n  .mat-form-field-can-float {\\n    &.mat-form-field-should-float .mat-form-field-label,\\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\\n      @include _mat-form-field-label-floating(\\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\\n    }\\n\\n    .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\\n        .mat-form-field-label {\\n      @include _mat-form-field-label-floating(\\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\\n    }\\n\\n    // Server-side rendered matInput with a label attribute but label not shown\\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\\n        .mat-form-field-label {\\n      @include _mat-form-field-label-floating(\\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\\n    }\\n  }\\n\\n  .mat-form-field-label-wrapper {\\n    top: -$infix-margin-top;\\n    padding-top: $infix-margin-top;\\n  }\\n\\n  .mat-form-field-label {\\n    top: $infix-margin-top + $infix-padding;\\n  }\\n\\n  .mat-form-field-underline {\\n    // We want the underline to start at the end of the content box, not the padding box,\\n    // so we move it up by the padding amount.\\n    bottom: $wrapper-padding-bottom;\\n  }\\n\\n  .mat-form-field-subscript-wrapper {\\n    font-size: $subscript-font-size;\\n    margin-top: $subscript-margin-top;\\n\\n    // We want the subscript to start at the end of the content box, not the padding box,\\n    // so we move it up by the padding amount (adjusted for the smaller font size);\\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\\n  }\\n}\\n\\n\\n\\n// Includes all of the typographic styles.\\n@mixin angular-material-typography($config: null) {\\n  @if $config == null {\\n    $config: mat-typography-config();\\n  }\\n\\n  @include mat-base-typography($config);\\n  @include mat-autocomplete-typography($config);\\n  @include mat-button-typography($config);\\n  @include mat-button-toggle-typography($config);\\n  @include mat-card-typography($config);\\n  @include mat-checkbox-typography($config);\\n  @include mat-chips-typography($config);\\n  @include mat-table-typography($config);\\n  @include mat-datepicker-typography($config);\\n  @include mat-dialog-typography($config);\\n  @include mat-expansion-panel-typography($config);\\n  @include mat-form-field-typography($config);\\n  @include mat-grid-list-typography($config);\\n  @include mat-icon-typography($config);\\n  @include mat-input-typography($config);\\n  @include mat-menu-typography($config);\\n  @include mat-paginator-typography($config);\\n  @include mat-progress-bar-typography($config);\\n  @include mat-progress-spinner-typography($config);\\n  @include mat-radio-typography($config);\\n  @include mat-select-typography($config);\\n  @include mat-sidenav-typography($config);\\n  @include mat-slide-toggle-typography($config);\\n  @include mat-slider-typography($config);\\n  @include mat-stepper-typography($config);\\n  @include mat-tabs-typography($config);\\n  @include mat-toolbar-typography($config);\\n  @include mat-tooltip-typography($config);\\n  @include mat-list-typography($config);\\n  @include mat-option-typography($config);\\n  @include mat-optgroup-typography($config);\\n  @include mat-snack-bar-typography($config);\\n}\\n\\n\\n// Mixin that renders all of the core styles that are not theme-dependent.\\n@mixin mat-core($typography-config: null) {\\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\\n  // elevated.\\n  @for $zValue from 0 through 24 {\\n    .#{$_mat-elevation-prefix}#{$zValue} {\\n      @include mat-elevation($zValue);\\n    }\\n  }\\n\\n  @include angular-material-typography($typography-config);\\n  @include mat-ripple();\\n  @include mat-option();\\n  @include mat-optgroup();\\n  @include cdk-a11y();\\n  @include cdk-overlay();\\n}\\n\\n// Mixin that renders all of the core styles that depend on the theme.\\n@mixin mat-core-theme($theme) {\\n  @include mat-ripple-theme($theme);\\n  @include mat-option-theme($theme);\\n  @include mat-optgroup-theme($theme);\\n  @include mat-pseudo-checkbox-theme($theme);\\n\\n  // Wrapper element that provides the theme background when the\\n  // user's content isn't inside of a `mat-sidenav-container`.\\n  .mat-app-background {\\n    $background: map-get($theme, background);\\n    background-color: mat-color($background, background);\\n  }\\n\\n  // Marker that is used to determine whether the user has added a theme to their page.\\n  .mat-theme-loaded-marker {\\n    display: none;\\n  }\\n}\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n// Create a theme.\\n@mixin angular-material-theme($theme) {\\n  @include mat-core-theme($theme);\\n  @include mat-autocomplete-theme($theme);\\n  @include mat-button-theme($theme);\\n  @include mat-button-toggle-theme($theme);\\n  @include mat-card-theme($theme);\\n  @include mat-checkbox-theme($theme);\\n  @include mat-chips-theme($theme);\\n  @include mat-table-theme($theme);\\n  @include mat-datepicker-theme($theme);\\n  @include mat-dialog-theme($theme);\\n  @include mat-expansion-panel-theme($theme);\\n  @include mat-form-field-theme($theme);\\n  @include mat-grid-list-theme($theme);\\n  @include mat-icon-theme($theme);\\n  @include mat-input-theme($theme);\\n  @include mat-list-theme($theme);\\n  @include mat-menu-theme($theme);\\n  @include mat-paginator-theme($theme);\\n  @include mat-progress-bar-theme($theme);\\n  @include mat-progress-spinner-theme($theme);\\n  @include mat-radio-theme($theme);\\n  @include mat-select-theme($theme);\\n  @include mat-sidenav-theme($theme);\\n  @include mat-slide-toggle-theme($theme);\\n  @include mat-slider-theme($theme);\\n  @include mat-stepper-theme($theme);\\n  @include mat-tabs-theme($theme);\\n  @include mat-toolbar-theme($theme);\\n  @include mat-tooltip-theme($theme);\\n  @include mat-snack-bar-theme($theme);\\n}\\n\",\"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n\\n/* Theme for the ripple elements.*/\\n\\n/** The mixins below are shared between mat-menu and mat-select */\\n\\n/**\\n * This mixin adds the correct panel transform styles based\\n * on the direction that the menu panel opens.\\n */\\n\\n/* stylelint-disable material/no-prefixes */\\n\\n/* stylelint-enable */\\n\\n/**\\n * This mixin contains shared option styles between the select and\\n * autocomplete components.\\n */\\n\\n:host {\\n  margin-right: 5px;\\n}\\n\\n:host:last-child {\\n  margin: 0;\\n}\\n\\n:host .fs-toggle-option {\\n  border: 1px solid #2196f3;\\n  border-radius: 4px;\\n  display: inline-block;\\n  padding: 5px 8px;\\n  cursor: pointer;\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  outline: none;\\n  text-align: center;\\n  color: #fff;\\n}\\n\\n:host .fs-toggle-option .mat-icon {\\n  vertical-align: middle;\\n}\\n\\n:host .fs-toggle-option .fs-toggle-option-template {\\n  vertical-align: middle;\\n}\\n\\n:host .fs-toggle-option.selected mat-icon {\\n  color: #fff;\\n}\\n\\n:host .fs-toggle-option:not(.selected) {\\n  background-color: transparent !important;\\n  border-color: #2196f3 !important;\\n  color: #2196f3 !important;\\n}\\n\\n:host .fs-toggle-option.selected {\\n  background-color: #2196f3;\\n  border-color: #2196f3;\\n}\\n\\n\",\"@import '~@angular/material/theming';\\n\\n:host {\\n\\n  margin-right: 5px;\\n\\n  &:last-child {\\n    margin: 0;\\n  }\\n\\n  .fs-toggle-option {\\n    border: 1px solid mat-color($mat-blue, 500);\\n    border-radius: 4px;\\n\\n    display: inline-block;\\n    padding: 5px 8px;\\n    cursor: pointer;\\n    -webkit-touch-callout:none;\\n    -webkit-user-select:none;\\n    -moz-user-select:none;\\n    -ms-user-select:none;\\n    user-select:none;\\n    outline: none;\\n    text-align: center;\\n    color: #fff;\\n\\n    .mat-icon {\\n      vertical-align: middle;\\n    }\\n\\n    .fs-toggle-option-template {\\n      vertical-align: middle;\\n    }\\n\\n    &.selected mat-icon {\\n      color: #fff;\\n    }\\n    &:not(.selected) {\\n      background-color: transparent !important;\\n      border-color: mat-color($mat-blue, 500) !important;\\n      color: mat-color($mat-blue, 500) !important;\\n    }\\n    &.selected {\\n      background-color: mat-color($mat-blue, 500);\\n      border-color: mat-color($mat-blue, 500);\\n    }\\n  }\\n}\\n\\n\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader?{\"sourceMap\":true}!../node_modules/postcss-loader/lib?{\"sourceMap\":true}!../node_modules/resolve-url-loader?{\"sourceMap\":true}!../node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./components/toggle-options/fstoggleoption.scss\n// module id = ../node_modules/css-loader/index.js?{\"sourceMap\":true}!../node_modules/postcss-loader/lib/index.js?{\"sourceMap\":true}!../node_modules/resolve-url-loader/index.js?{\"sourceMap\":true}!../node_modules/sass-loader/lib/loader.js?{\"sourceMap\":true}!./components/toggle-options/fstoggleoption.scss\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/css-loader/lib/css-base.js\n// module id = ../node_modules/css-loader/lib/css-base.js\n// module chunks = 0","export * from './toggle';\nexport * from './toggle-container';\nexport * from './toggle-options';\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/index.ts","import { Component, Input, OnInit, OnChanges } from '@angular/core';\n\n@Component({\n    selector: 'fs-toggle-container',\n    template: '<ng-content></ng-content>',\n    styles: [require('./fstogglecontainer.scss')]\n})\nexport class FsToggleContainerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle-container/fstogglecontainer.component.ts","\n        var result = require(\"!!../../../node_modules/css-loader/index.js??ref--3-1!../../../node_modules/postcss-loader/lib/index.js??ref--3-2!../../../node_modules/resolve-url-loader/index.js??ref--3-3!../../../node_modules/sass-loader/lib/loader.js??ref--3-4!./fstogglecontainer.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/toggle-container/fstogglecontainer.scss\n// module id = ./components/toggle-container/fstogglecontainer.scss\n// module chunks = 0","export * from './fstogglecontainer.component';\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle-container/index.ts","import { Component, Input, Output, Renderer, ElementRef, EventEmitter, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'fs-toggle-option',\n    template: `\n    <div fxLayoutAlign=\"start center\" class=\"fs-toggle-option\" (click)=\"select()\"\n    [ngClass]=\"{ selected: selected }\"\n    [ngStyle]=\"style\">\n      <mat-icon *ngIf=\"fsIcon\">{{ fsIcon }}</mat-icon>\n      <span class=\"fs-toggle-option-template\">\n        <ng-content></ng-content>\n      </span>\n    </div>`,\n    styles: [require('./fstoggleoption.scss')]\n})\nexport class FsToggleOptionComponent implements OnInit {\n\n  @Input() value;\n  @Input() selected = false;\n  @Input() style = {};\n  @Input() fsWidth;\n  @Input() fsIcon;\n\n  onClick: (object) => void;\n\n  constructor(private elementRef: ElementRef, private renderer: Renderer) { }\n\n  ngOnInit() {\n    if (this.fsWidth) {\n      this.style['width'] = this.fsWidth + 'px';\n    }\n  }\n\n  select() {\n    this.onClick(this.value);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle-options/fstoggleoption.component.ts","\n        var result = require(\"!!../../../node_modules/css-loader/index.js??ref--3-1!../../../node_modules/postcss-loader/lib/index.js??ref--3-2!../../../node_modules/resolve-url-loader/index.js??ref--3-3!../../../node_modules/sass-loader/lib/loader.js??ref--3-4!./fstoggleoption.scss\");\n\n        if (typeof result === \"string\") {\n            module.exports = result;\n        } else {\n            module.exports = result.toString();\n        }\n    \n\n\n//////////////////\n// WEBPACK FOOTER\n// ./components/toggle-options/fstoggleoption.scss\n// module id = ./components/toggle-options/fstoggleoption.scss\n// module chunks = 0","export * from './fstoggleoption.component';\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle-options/index.ts","import { Component, Input, Output, ViewChildren, EventEmitter, ContentChildren, QueryList,\n   ViewContainerRef, forwardRef, Provider, OnInit, DoCheck, IterableDiffers, AfterViewChecked, AfterViewInit } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { FsArray } from '@firestitch/common';\nimport { FsToggleOptionComponent } from '../toggle-options/fstoggleoption.component';\n\nexport const TOGGLE_VALUE_ACCESSOR: Provider = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => FsToggleComponent),\n  multi: true\n};\n\n@Component({\n    selector: 'fs-toggle',\n    template: '<ng-content></ng-content>',\n    providers: [TOGGLE_VALUE_ACCESSOR]\n})\nexport class FsToggleComponent implements OnInit, DoCheck {\n\n  @Input() fsMultiple = false;\n  @Output() change = new EventEmitter();\n\n  private _model: object[] | object = null;\n  private _toggleOptionComponents = [];\n  private _childrenDiffer = null;\n\n  @ContentChildren(FsToggleOptionComponent, { read: ViewContainerRef, descendants: true }) options: QueryList<FsToggleOptionComponent>;\n\n  // event hooks for VALUE_ACCESSOR. those are used to imitate real input behavior and emit events outside the directive, e.g. \"touched\"\n  _onTouched = () => { };\n  _onChange = (value: any) => { };\n  onFocused = (event: any) => { };\n\n  // we initiate those functions to emit events outside the component\n  registerOnChange(fn: (value: any) => any): void { this._onChange = fn }\n  registerOnTouched(fn: () => any): void { this._onTouched = fn }\n\n  constructor(private fsArray: FsArray, private _iterableDiffers: IterableDiffers) {\n    this._childrenDiffer = this._iterableDiffers.find([]).create(null);\n  }\n\n  ngOnInit() {\n  }\n\n  ngDoCheck() {\n    setTimeout(() => {\n      if (this.options && this._childrenDiffer.diff(this.options['_results'])) {\n\n        for (const item of this.options['_results']) {\n          this._toggleOptionComponents.push(item['_data'].componentView.component);\n        }\n\n        for (const item of this._toggleOptionComponents) {\n\n          item.onClick = (value) => {\n            this.setValue(value);\n          };\n        }\n\n        if (this._model) {\n          this.syncSelectedStatus();\n\n          this._onChange(this._model);\n          this.change.emit(this._model);\n        }\n      }\n    });\n  }\n\n  setValue(value) {\n\n    if (this.fsMultiple) {\n      const index = this.findIndex(value);\n\n      if (index >= 0) {\n        (<object[]>this._model).splice(index, 1);\n      } else {\n        (<object[]>this._model).push(value);\n      }\n    }else {\n      this._model = value;\n    }\n\n    this.syncSelectedStatus();\n\n    this._onChange(this._model);\n    this.change.emit(this._model);\n  }\n\n  syncSelectedStatus() {\n    for (const item of this._toggleOptionComponents) {\n      if (this.fsMultiple) {\n        const index = this.findIndex(item.value);\n        if (index >= 0) {\n          item.selected = true;\n        }else {\n          item.selected = false;\n        }\n      }else {\n        item.selected = item.value == this._model;\n      }\n    };\n  }\n\n  findIndex(value) {\n    return value.id ? this.fsArray.indexOf(this._model, { id: value.id }) : (<object[]>this._model).indexOf(value);\n  }\n\n  writeValue(value): void {\n    if (value) {\n      this._model = value;\n    }else {\n      this._model = this.fsMultiple ? [] : {};\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle/fstoggle.component.ts","export * from './fstoggle.component';\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./components/toggle/index.ts","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material';\nimport { FsCommonModule } from '@firestitch/common';\n\nimport { FsToggleContainerComponent } from './components/toggle-container/fstogglecontainer.component';\nimport { FsToggleComponent } from './components/toggle/fstoggle.component';\nimport { FsToggleOptionComponent } from './components/toggle-options/fstoggleoption.component';\n\n@NgModule({\n    declarations: [\n      FsToggleContainerComponent,\n      FsToggleComponent,\n      FsToggleOptionComponent\n    ],\n    imports: [\n      CommonModule,\n      FormsModule,\n      MatIconModule,\n      FsCommonModule\n    ],\n    providers: [\n    ],\n    exports: [\n      FsToggleContainerComponent,\n      FsToggleComponent,\n      FsToggleOptionComponent\n    ]\n})\nexport class FsToggleModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: FsToggleModule,\n      providers: []\n    };\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./fstoggle.module.ts","export * from './fstoggle.module';\nexport * from './components';\n\n\n\n// WEBPACK FOOTER //\n// ../node_modules/angular2-template-loader!./index.ts","module.exports = require(\"@angular/common\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/common\"\n// module id = @angular/common\n// module chunks = 0","module.exports = require(\"@angular/core\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/core\"\n// module id = @angular/core\n// module chunks = 0","module.exports = require(\"@angular/forms\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/forms\"\n// module id = @angular/forms\n// module chunks = 0","module.exports = require(\"@angular/material\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@angular/material\"\n// module id = @angular/material\n// module chunks = 0","module.exports = require(\"@firestitch/common\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"@firestitch/common\"\n// module id = @firestitch/common\n// module chunks = 0"],"sourceRoot":""}